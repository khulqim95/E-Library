#pragma checksum "C:\work\Portal PMO\PortalPMO\Views\CreateProject\_Script.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1a2e0a1f8fae7c3bfc8bdafa9e5e235db429bd71"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CreateProject__Script), @"mvc.1.0.view", @"/Views/CreateProject/_Script.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CreateProject/_Script.cshtml", typeof(AspNetCore.Views_CreateProject__Script))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\work\Portal PMO\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO;

#line default
#line hidden
#line 2 "C:\work\Portal PMO\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1a2e0a1f8fae7c3bfc8bdafa9e5e235db429bd71", @"/Views/CreateProject/_Script.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ba151424cb7e4ff7d935c55cfcaa12c04b783fe", @"/Views/_ViewImports.cshtml")]
    public class Views_CreateProject__Script : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 54894, true);
            WriteLiteral(@"<script type=""text/javascript"">
    var State = '';
    var StateTempClient = """";
    var StateTempRelasiProject = """";
    var StateTempAnggotaTim = """";
    var TableClient;
    var TableRelasiProject;
    var TableAnggotaTim;
    var dataClient = [];
    $(document).ready(function () {
        var btnSimpan = $('<a href=""#"" class=""btn btn-primary"" id=""BtnSubmitProject"" >Submit</a>')
        // Smart Wizard
        $('#smartwizard').smartWizard({
            //selected: 1,
            theme: 'default',
            autoAdjustHeight: true,
            transition: {
                animation: 'slide-horizontal', // Effect on navigation, none/fade/slide-horizontal/slide-vertical/slide-swing
            },
            toolbarSettings: {
                toolbarPosition: 'bottom', // both bottom
                toolbarExtraButtons: [btnSimpan]
            },
            enableFinishButton: false,
            useURLhash: false,
            showStepURLhash: false,
            anchorSettings: ");
            WriteLiteral(@"{
                anchorClickable: true,
                // Enable/Disable anchor navigation
                enableAllAnchors: true,
                // Activates all anchors clickable all times
                markDoneStep: true,
                // Add done state on navigation
                markAllPreviousStepsAsDone: true,
                // When a step selected by url hash, all previous steps are marked done
                removeDoneStepOnNavigateBack: false,
                // While navigate back done step after active step will be cleared
                enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation

            },
            keyboardSettings: {
                keyNavigation: false,
                // Enable/Disable keyboard navigation(left and right keys are used if enabled)
                keyLeft: [37],
                // Left key code
                keyRight: [39] // Right key code

            },
        });
        $(""#smartwizard"").on(""leaveSte");
            WriteLiteral(@"p"", function (e, anchorObject, currentStepIndex, nextStepIndex, stepDirection) {
            var textareaValue = $('#DetailRequirment').summernote('code');
            var textCatatan = $('#CatatanUser').summernote('code');
            $(""#DetailRequirment"").val(textareaValue);
            $(""#CatatanUser"").val(textCatatan);
            //alert($(""#CatatanUser"").val());
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                //alert(""Invalid"");
                $validatorForm.focusInvalid();
                return false;
            }
            //var CekNextPage = true;
            //if (currentStepIndex == 0) //Cek apakah user sudah diinputkan sebelumnya
            //{
            //    setTimeout(function () {
            //        $.ajax({
            //            url: '../CreateProject/CekJumlahUser',
            //            type: 'POST',
            //            success: function (d) {
            //                if (d != """") {
            ");
            WriteLiteral(@"//                    NotifikasiError(""Error"", d)
            //                    CekNextPage = false;
            //                }
            //            }
            //        });
            //    }, 500);
            //    if (!CekNextPage) {
            //        return false;

            //    }
            //}
        });

        $(""#smartwizard"").on(""showStep"", function (e, anchorObject, stepNumber, stepDirection) {
            var $current = stepNumber + 1;
            switch ($current) {
                case 1:
                    LoadDatatableUser();
                    LoadDatatableRelasiProject();

                    break;
                case 2:
                    $(""#FormData"").validate();
                    $('#step-2 input, #step-2 select').each(
                        function (index) {
                            var input = $(this);
                            //alert(input.attr('name'));
                            $('#'+input.attr('id')).rules('");
            WriteLiteral(@"add', {
                                required: true
                            });
                        }
                    );
                    break;
                case 3:
                    LoadDatatableAnggotaTim();
                    break;
                case 4:
                    DropdownProjectStatusServerSide(""ProjectStatusId"", ""100"", false);
                    $(""#FormData"").validate();
                    $('#step-4 select, #step-4 textarea').each(
                        function (index) {
                            var input = $(this);
                            if (input.attr('id') != undefined) {
                                $('#' + input.attr('id')).rules('add', {
                                    required: true
                                });
                            }
                            
                        }
                    );


                    //$(""#FormData"").validate();
                    //$('#step-4 input, ");
            WriteLiteral(@"#step-4 select,#step-4 textarea').each(
                    //    function (index) {
                    //        var input = $(this);
                    //        //alert(input.attr('name'));
                    //        $('#' + input.attr('id')).rules('add', {
                    //            required: true
                    //        });
                    //    }
                    //);
                    

                    //DropdownDataAllPegawaiServerSide(""AssignTo"", ""100"", false);

                 
                    break;
            }
           
            if ($('button.sw-btn-next').hasClass('disabled')) {
                $('button.sw-btn-next').hide();
                $('#BtnSubmitProject').show();
            } else {
                $('button.sw-btn-next').show();
                $('#BtnSubmitProject').hide();
            }
        });


        $.fn.datepicker.language['en'] = {
            days: ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat'");
            WriteLiteral(@", 'Sabtu'],
            daysShort: ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab'],
            daysMin: ['Mn', 'Sn', 'Sl', 'Rb', 'Km', 'Jm', 'Sa'],
            months: ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],
            today: 'Today',
            clear: 'Clear',
            //dateFormat: 'dd/mm/yyyy',
            firstDay: 0
        };

        ValidationForm();
        $(""input[name=IsActive][value=True]"").prop(""checked"", true);



        $('#DetailRequirment').summernote({
            placeholder: 'Masukkan Diskripsi Project',
            height: 300,
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'underline', 'clear']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['t");
            WriteLiteral(@"able']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ]
        });
        $(""#DetailRequirment"").summernote(""code"", """");

        $('#CatatanUser').summernote({
            placeholder: 'Masukkan Catatan',
            height: 300,
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'underline', 'clear']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['table']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ]
        });
        $(""#CatatanUser"").summernote(""code"", """");



        $('.dropify').dropify({

        });

        DropdownKompleksitasProjectServerSide(""KompleksitasProjectId"", ""100"", false);
        DropdownKlasifikasiProjectServerSide(""KlasifikasiProjectId"", ""100"", false);
        Dropd");
            WriteLiteral(@"ownSkorProjectServerSide(""SkorProjectId"", ""100"", false);
        DropdownKategoriProjectServerSide(""KategoriProjectId"", ""100"", false);
        var KategoriProjectId = $(""#KategoriProjectId"").val();
        DropdownSubKategoriProjectServerSide(""SubKategoriProjectId"", ""100"", false, KategoriProjectId)

        //CreateContentTanggal(""TanggalEstimasiDone"");
        //RangeDateDefault('TanggalEstimasiDone', '01/01/2020', '01/12/2020');
        RangeDateDefault('TanggalEstimasiDone');
        //$('#TanggalEstimasiDone').data('daterangepicker').setMinDate('01/01/2014');
        //$('#TanggalEstimasiDone').data('daterangepicker').setMaxDate('02/01/2014');
        CreateContentTanggal(""TanggalMemo"");
        CreateContentTanggal(""TanggalKlarifikasi"");
        CreateContentTanggal(""TanggalDisposisi"");
        CreateContentTanggal(""TanggalDrf"");

        CreateContentTanggal(""TanggalEstimasiProduction"");
        RangeDateDefault('TanggalEstimasiDevelopment');
        RangeDateDefault('TanggalEstimasiTes");
            WriteLiteral(@"ting');
        RangeDateDefault('TanggalEstimasiPiloting');
        RangeDateDefault('TanggalEstimasiPir');
        

        //$("".sw-btn-next"").click(function () {


        //    //var $valid = $(""#FormData"").valid();
        //    //if (!$valid) {
        //    //    $validatorForm.focusInvalid();
        //    //    return false;
        //    //    alert(""Tes"");
        //    //}
        //});
    });

    function GetSubKategoriProject() {
        var KategoriProjectId = $(""#KategoriProjectId"").val();
        DropdownSubKategoriProjectServerSide(""SubKategoriProjectId"", ""100"", false, KategoriProjectId)

    }

    //Untuk Validasi Form data Pinjaman
    function ValidationForm() {
        //Untuk validasi form
        $validatorForm = $(""#FormData"").validate({
            ignore: [],
            rules: {
                Nama: {
                    required: true
                },
                DetailRequirment: {
                    required: true
                },");
            WriteLiteral(@"
                NoMemo: {
                    required: true
                },
                TanggalMemo: {
                    required: true
                },
                TanggalKlarifikasi: {
                    required: true
                },
                TanggalDisposisi: {
                    required: true
                },
                TanggalEstimasiDone: {
                    required: true
                },
                NoDrf: {
                    required: true
                },
                TanggalDrf: {
                    required: true
                },
                FileMemo: {
                    required: true
                },
                FileNotulen: {
                    required: true
                },
                FileDRF: {
                    required: true
                },
                FileNotulen: {
                    required: true
                }
                //KompleksitasProjectId: {
          ");
            WriteLiteral(@"      //    required: true
                //},
                //KlasifikasiProjectId: {
                //    required: true
                //},
                //PeriodeProjectId: {
                //    required: true
                //},
                //KategoriProjectId: {
                //    required: true
                //},
                ////SubKategoriProjectId: {
                ////    required: true
                ////},
                //SkorProjectId: {
                //    required: true
                //},
                //MandatoryId: {
                //    required: true
                //},
                //isPIR: {
                //    required: true
                //},
                //TanggalEstimasiDone: {
                //    required: true
                //}

            },
            messages: {

            },

            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success')");
            WriteLiteral(@".addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.is(':file')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());");
            WriteLiteral(@"
                }
                else {
                    error.insertAfter(element);
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah valid atau belum
        $('#BtnSubmitProject').click(function () {
            var textareaValue = $('#DetailRequirment').summernote('code');
            var textCatatan = $('#CatatanAssignment').summernote('code');
            $(""#DetailRequirment"").val(textareaValue);
            $(""#CatatanAssignment"").val(textCatatan);
            //var AssignTo = $(""#AssignTo"").val().join();
            //$(""#AssignToJoin"").val(AssignTo);
            //alert($(""#AssignToJoin"").val());
            var url = '';
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                $validatorForm.focusInvalid();
                return false;
            } else {
                url = '../CreateProject/SubmitCreate';
                v");
            WriteLiteral(@"ar fd = $(""#FormData"")[0];
                $.ajax(
                    {
                        url: url,
                        data: new FormData(fd),
                        mimeType: ""multipart/form-data"",
                        processData: false,
                        contentType: false,
                        type: ""POST"",
                        success: function (data) {
                            if (data == """") {
                                NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                setTimeout(function () {
                                    location.href = ""../DataProject/Index""
                                }, 1000);
                            }
                            else {
                                NotifikasiError(""Error"", data)
                            }
                        },
                        error: function (xhr, status, error) {
                            swal(""error"", error, ""warning"")");
            WriteLiteral(@";
                        }
                    }
                );
            }
        });
    }


    function CreateClient() {
        ShowModal('bd-example-modal-lg');
        State = ""create"";
        UrlPartialView = '../CreateProject/CreateClient';
        //Cek session masih aktif atau tidak
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    LoadPartialViewData(UrlPartialView, function (data) {
                        //ShowModal('bd-example-modal-lg');
                        //StateTempClient = ""create"";
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        ValidationFormClient();
                       ");
            WriteLiteral(@" DropdownClientModalServerSide(""ClientId"", ""100"", false)
                        $('#Keterangan').summernote({
                            placeholder: 'Masukkan Keterangan',
                            height: 200,
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'underline', 'clear']],
                                ['color', ['color']],
                                ['para', ['ul', 'ol', 'paragraph']],
                                ['table', ['table']],
                                ['insert', ['link', 'picture', 'video']],
                                ['view', ['fullscreen', 'codeview', 'help']]
                            ]
                        });
                        $(""#Keterangan"").summernote(""code"", """");

                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
  ");
            WriteLiteral(@"      });
    }

    //--***************************************START EDIT ******************************************//
    function EditClienTemp(Id) {
        ShowModal('bd-example-modal-lg');

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    //ShowModal('bd-example-modal-lg');

                    StateTempClient = ""edit"";
                    SearchData = { ""Id"": Id }
                    UrlPartialView = '../CreateProject/EditClientTemp';
                    LoadPartialViewData(UrlPartialView, function (data) {
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        DropdownClientServerSide(""ClientId"", ""100"", false)
 ");
            WriteLiteral(@"                       ValidationFormClient();
                        $('#Keterangan').summernote({
                            placeholder: 'Masukkan Keterangan',
                            height: 200,
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'underline', 'clear']],
                                ['color', ['color']],
                                ['para', ['ul', 'ol', 'paragraph']],
                                ['table', ['table']],
                                ['insert', ['link', 'picture', 'video']],
                                ['view', ['fullscreen', 'codeview', 'help']]
                            ]
                        });

                    }, SearchData);
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }
    //--************************************");
            WriteLiteral(@"***END EDIT ******************************************//


    //Untuk Validasi Form data
    function ValidationFormClient() {
        //Untuk validasi form
        var $validator = $(""#FormDataClient"").validate({
            ignore: [],
            rules: {
                ClientId: {
                    required: true
                },
                NppPic: {
                    required: true
                },
                NamaPic: {
                    required: true
                },
                Keterangan: {
                    required: true
                },
                Email: {
                    email: true
                }
            },
            messages: {
                Email: {
                    email: ""Format email salah!""
                }
            },

            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighligh");
            WriteLiteral(@"t: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah ");
            WriteLiteral(@"valid atau belum
        $('#BtnSubmitUser').click(function () {
            var textareaValue = $('#Keterangan').summernote('code');
            $(""#Keterangan"").val(textareaValue);
            var urlClient = '';
            var $valid = $(""#FormDataClient"").valid();
            if (!$valid) {
                $validator.focusInvalid();
                return false;
            } else {
                if (StateTempClient == ""edit"") {
                    urlClient = '../CreateProject/SubmitEditClientTemp';
                }
                else {
                    urlClient = '../CreateProject/SubmitCreateClientTemp'
                }
                $.ajax({
                    url: urlClient,
                    type: 'POST',
                    data: $('#FormDataClient').serialize(),
                    success: function (d) {
                        //Tampilkan alert status
                        if (d == """") {
                            $('#ModalForm').modal('hide');
        ");
            WriteLiteral(@"                    NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                            LoadDatatableUser();
                        } else {
                            NotifikasiError(""Error"", d)
                        }
                    }
                });
            }
        });
    }

    function LoadDatatableUser() {
        TableClient = $('#TableClient').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            responsive: false,
            scrollX: true,
            serverSide: false, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            //data: ListdataClient,
            ajax: {
                ""url"": '../CreateProject/LoadDataClientCreate',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                error: function (jqXHR, textStatus, errorThrown) {
   ");
            WriteLiteral(@"                 window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": null, ""name"": null },
                {
                    responsivePriority: 2,
                    ""data"": null,");
            WriteLiteral(@" ""name"": null, ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditClienTemp(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                            + '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteClient(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'
                    }
                },
                { responsivePriority: 3, ""data"": ""Client"", ""name"": ""Client"" },
                { responsivePriority: 3, ""data"": ""NamaPic"", ""name"": ""NamaPic"" },
                { responsivePriority: 4, ""data"": ""NppPic"", ""name"": ""NppPic"" },
                { responsivePriority: 5, ""data"": ""NamaPic"", ""name"": ""NamaPic"" },
  ");
            WriteLiteral(@"              { responsivePriority: 6, ""data"": ""Email"", ""name"": ""Email"" },
                { responsivePriority: 7, ""data"": ""NoHp"", ""name"": ""NoHp"" },
                { responsivePriority: 8, ""data"": ""Keterangan"", ""name"": ""Keterangan"" }

            ],
            ""order"": [[1, ""desc""]]
        });

        TableClient.on('order.dt search.dt', function () {
            TableClient.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
    }

    //--***************************************START DELETE CLIENT TEMP******************************************//
    function DeleteClient(Id) {
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    StateTempClient = ""delete"";
                    swal({
                        title: ""Konfirmasi"",
                      ");
            WriteLiteral(@"  text: ""Apakah Anda yakin ingin menghapus data ini?"",
                        icon: ""warning"",
                        buttons: true,
                        dangerMode: true,
                    })
                        .then((willDelete) => {
                            if (willDelete) {
                                $.ajax({
                                    url: '../CreateProject/DeleteClientTemp',
                                    type: 'POST',
                                    data: { ""Ids"": Id },
                                    success: function (d) {
                                        if (d == """") {
                                            NotifikasiSukses(""Sukses"", ""Data berhasil dihapus!"");
                                        } else {
                                            NotifikasiError(""Error"", ""Data gagal dihapus!"")
                                        }
                                        LoadDatatableUser();
                             ");
            WriteLiteral(@"       }
                                });
                            }
                        });
                    return false;
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });



    }
    //--***************************************END DELETE ******************************************//


    //------------------------------------------------------------------------DATA RELASI PROJECT--------------------------------------------------------//
    function CreateRelasiProject() {
        ShowModal('bd-example-modal-lg');
        StateTempRelasiProject = ""create"";
        UrlPartialView = '../CreateProject/CreateRelasiProject';
        //Cek session masih aktif atau tidak
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    LoadPartialViewData(UrlP");
            WriteLiteral(@"artialView, function (data) {
                        //ShowModal('bd-example-modal-lg');
                        //StateTempClient = ""create"";
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        ValidationFormRelasiProject();
                        DropdownAllProjectModalServerSide(""RelasiProjectId"", ""100"", false)
                        $('#Keterangan').summernote({
                            placeholder: 'Masukkan Keterangan',
                            height: 300,
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'underline', 'clear']],
                                ['color', ['color']],
                                ['para', ['ul', 'ol', 'paragrap");
            WriteLiteral(@"h']],
                                ['table', ['table']],
                                ['insert', ['link', 'picture', 'video']],
                                ['view', ['fullscreen', 'codeview', 'help']]
                            ]
                        });
                        $(""#Keterangan"").summernote(""code"", """");

                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    //Untuk Validasi Form data Pinjaman
    function ValidationFormRelasiProject() {
        //Untuk validasi form
        var $validator = $(""#FormDataRelasiProject"").validate({
            ignore: [],
            rules: {
                RelasiProjectId: {
                    required: true
                },
                Keterangan: {
                    required: true
                }
            },
            messages: {

            },

            highlig");
            WriteLiteral(@"ht: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);");
            WriteLiteral(@"
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah valid atau belum
        $('#BtnSubmitRelasiProject').click(function () {
            var Url = '';
            var textareaValue = $('#Keterangan').summernote('code');
            $(""#Keterangan"").val(textareaValue);
            var $valid = $(""#FormDataRelasiProject"").valid();
            if (!$valid) {
                $validator.focusInvalid();
                return false;
            } else {
                if (StateTempRelasiProject == ""edit"") {
                    Url = '../CreateProject/SubmitEditRelasiProjectTemp';
                }
                else {
                    Url = '../CreateProject/SubmitCreateRelasiProjectTemp'
                }
                $.ajax({
                    url: Url,
                    type: 'POST',
                    data: $('#FormDataRelasiProject').serialize(),
                  ");
            WriteLiteral(@"  success: function (d) {
                        //Tampilkan alert status
                        if (d == """") {
                            $('#ModalForm').modal('hide');
                            NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                            LoadDatatableRelasiProject();
                        } else {
                            NotifikasiError(""Error"", d)
                        }
                    }
                });
            }
        });
    }

    function LoadDatatableRelasiProject() {
        TableRelasiProject = $('#TableRelasiProject').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            responsive: false,
            scrollX: true,
            serverSide: false, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            //data: ListdataClient,
          ");
            WriteLiteral(@"  ajax: {
                ""url"": '../CreateProject/LoadDataRelasiProjectTemp',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                error: function (jqXHR, textStatus, errorThrown) {
                    window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tida");
            WriteLiteral(@"k ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": null, ""name"": null },
                {
                    responsivePriority: 2,
                    ""data"": null, ""name"": null, ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditRelasiProject(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                            + '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteRelasiTemp(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'
                    }
                },
                { responsivePriority: 3, ""data"": ""ProjectNo"", ""name"": ""ProjectNo"" },
          ");
            WriteLiteral(@"      { responsivePriority: 4, ""data"": ""NamaProject"", ""name"": ""NamaProject"" },
                { responsivePriority: 5, ""data"": ""Keterangan"", ""name"": ""Keterangan"" }

            ],
            ""order"": [[1, ""desc""]]
        });

        TableRelasiProject.on('order.dt search.dt', function () {
            TableRelasiProject.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
    }

    function EditRelasiProject(Id) {
        ShowModal('bd-example-modal-lg');

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    //ShowModal('bd-example-modal-lg');

                    StateTempRelasiProject = ""edit"";
                    SearchData = { ""Id"": Id }
                    UrlPartialView = '../CreateProject/EditRelasiProjectTemp';
                    LoadPartia");
            WriteLiteral(@"lViewData(UrlPartialView, function (data) {
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        DropdownAllProjectServerSide(""RelasiProjectId"", ""100"", false)
                        ValidationFormRelasiProject();
                        $('#Keterangan').summernote({
                            placeholder: 'Masukkan Keterangan',
                            height: 300,
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'underline', 'clear']],
                                ['color', ['color']],
                                ['para', ['ul', 'ol', 'paragraph']],
                                ['table', ['table']],
                                ['insert', ['");
            WriteLiteral(@"link', 'picture', 'video']],
                                ['view', ['fullscreen', 'codeview', 'help']]
                            ]
                        });

                    }, SearchData);
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }
    //--***************************************END EDIT ******************************************//


    //--***************************************START DELETE ******************************************//
    function DeleteRelasiTemp(Id) {
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    StateTempClient = ""delete"";
                    swal({
                        title: ""Konfirmasi"",
                        text: ""Apakah Anda yakin ingin menghapus data ini?"",
                        icon: ""warn");
            WriteLiteral(@"ing"",
                        buttons: true,
                        dangerMode: true,
                    })
                        .then((willDelete) => {
                            if (willDelete) {
                                $.ajax({
                                    url: '../CreateProject/DeleteRelasiProjectTemp',
                                    type: 'POST',
                                    data: { ""Ids"": Id },
                                    success: function (d) {
                                        if (d == """") {
                                            NotifikasiSukses(""Sukses"", ""Data berhasil dihapus!"");
                                        } else {
                                            NotifikasiError(""Error"", ""Data gagal dihapus!"")
                                        }
                                        LoadDatatableRelasiProject();
                                    }
                                });
                            ");
            WriteLiteral(@"}
                        });
                    return false;
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });



    }
    //--***************************************END DELETE ******************************************//




    //------------------------------------------------------------------------DATA ANGGOTA TIM--------------------------------------------------------//
    function CreateAnggotaTim() {
        ShowModal('bd-example-modal-lg');
        State = ""create"";
        UrlPartialView = '../CreateProject/CreateAnggotaTim';
        //Cek session masih aktif atau tidak
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    LoadPartialViewData(UrlPartialView, function (data) {
                        //ShowModal('bd-example-modal-lg');
     ");
            WriteLiteral(@"                   //StateTempClient = ""create"";
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        ValidationFormAnggotaTim();
                        //CreateContentTanggal(""TanggalTargetPenyelesaianAnggotaTim"");
                        //AdvanceDateRangePicker('TanggalTargetPenyelesaianAnggotaTim');
                        var PeriodeEstimasiProject = $(""#TanggalEstimasiDone"").val();
                        var PeriodeSearchSplitArray = PeriodeEstimasiProject.split(""-"");

                        RangeDateDefault('TanggalTargetPenyelesaianAnggotaTim', PeriodeSearchSplitArray[0].split(' ').join(''), PeriodeSearchSplitArray[1].split(' ').join(''));
                        DropdownDataJobPositionServerSideModal(""JobPositionId"", ""100"", false);
           ");
            WriteLiteral(@"             DropdownDataAllPegawaiServerSideModal(""PegawaiId"", ""100"", false);
                        //$('input[name=""TanggalTargetPenyelesaianAnggotaTim""]').daterangepicker();
                        $('#Keterangan').summernote({
                            placeholder: 'Masukkan Deskripsi Kerjaan',
                            height: 300,
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'underline', 'clear']],
                                ['color', ['color']],
                                ['para', ['ul', 'ol', 'paragraph']],
                                ['table', ['table']],
                                ['insert', ['link', 'picture', 'video']],
                                ['view', ['fullscreen', 'codeview', 'help']]
                            ]
                        });
                        $(""#Keterangan"").summernote(""code"", """");
                        $(""input[name=SendAsT");
            WriteLiteral(@"ask][value=1]"").prop(""checked"", true);

                        //DropdownAllProjectServerSide(""RelasiProjectId"", ""100"", false)

                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    //Untuk Validasi Form data Pinjaman
    function ValidationFormAnggotaTim() {
        //Untuk validasi form
        var $validator = $(""#FormDataAnggotaTim"").validate({
            ignore: [],
            rules: {
                JobPositionId: {
                    required: true
                },
                PegawaiId: {
                    required: true
                },
                Keterangan: {
                    required: true
                }
            },
            messages: {

            },

            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
     ");
            WriteLiteral(@"       },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

 ");
            WriteLiteral(@"       //check apakah form sudah valid atau belum
        $('#BtnSubmitAnggotaTim').click(function () {
            var urlClient = '';
            var $valid = $(""#FormDataAnggotaTim"").valid();
            var textareaValue = $('#Keterangan').summernote('code');
            $(""#Keterangan"").val(textareaValue);
            if (!$valid) {
                $validator.focusInvalid();
                return false;
            } else {
                if (StateTempClient == ""edit"") {
                    urlClient = '../CreateProject/SubmitEditAnggotaTimTemp';
                }
                else {
                    urlClient = '../CreateProject/SubmitCreateAnggotaTimTemp'
                }
                $.ajax({
                    url: urlClient,
                    type: 'POST',
                    data: $('#FormDataAnggotaTim').serialize(),
                    success: function (d) {
                        //Tampilkan alert status
                        if (d == """") {
             ");
            WriteLiteral(@"               $('#ModalForm').modal('hide');
                            NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                            LoadDatatableAnggotaTim();
                        } else {
                            NotifikasiError(""Error"", d)
                        }
                    }
                });
            }
        });
    }

    function LoadDatatableAnggotaTim() {
        TableAnggotaTim = $('#TableAnggotaTim').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            responsive: false,
            scrollX:true,
            serverSide: false, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            //data: ListdataClient,
            ajax: {
                ""url"": '../CreateProject/LoadDataAnggotaTimTemp',
                ""type"": ""POST"",
                ""datatype"": ""jso");
            WriteLiteral(@"n"",
                error: function (jqXHR, textStatus, errorThrown) {
                    window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": null, ""name"": null },
                {
 ");
            WriteLiteral(@"                   responsivePriority: 2,
                    ""data"": null, ""name"": null, ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditAnggotaTim(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                            + '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteAnggotaTim(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'
                    }
                },
                { responsivePriority: 2, ""data"": ""JobPosisi"", ""name"": ""JobPosisi"" },
                { responsivePriority: 3, ""data"": ""Npp"", ""name"": ""Npp"" },
                { responsivePriority: 4, ""data"": ""Nama"", ""name"": ""Nama"" },
         ");
            WriteLiteral(@"       { responsivePriority: 5, ""data"": ""Unit"", ""name"": ""Unit"" },
                {
                    responsivePriority: 6,
                    ""data"": ""SendAsTask"", ""name"": ""SendAsTask"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        if (full.SendAsTask == 1) {
                            return 'Ya'
                        }
                        else {
                            return 'Tidak'
                        }
                      
                    }
                },
                { responsivePriority: 8, ""data"": ""Email"", ""name"": ""Email"" },
                { responsivePriority: 9, ""data"": ""Telepon"", ""name"": ""Telepon"" },
                { responsivePriority: 7, ""data"": ""Keterangan"", ""name"": ""Keterangan"" }

            ],
            ""order"": [[1, ""desc""]]
        });

        TableAnggotaTim.on('order.dt search.dt', function () {
            TableAnggotaTim.column(0, { search: 'applied', order: 'applied'");
            WriteLiteral(@" }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
    }

    //--***************************************START DELETE CLIENT TEMP******************************************//
    function DeleteAnggotaTim(Id) {
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    StateTempClient = ""delete"";
                    swal({
                        title: ""Konfirmasi"",
                        text: ""Apakah Anda yakin ingin menghapus data ini?"",
                        icon: ""warning"",
                        buttons: true,
                        dangerMode: true,
                    })
                        .then((willDelete) => {
                            if (willDelete) {
                                $.ajax({
                                    url: '../CreateProject/DeleteAnggotaTimTemp',
         ");
            WriteLiteral(@"                           type: 'POST',
                                    data: { ""Ids"": Id },
                                    success: function (d) {
                                        if (d == """") {
                                            NotifikasiSukses(""Sukses"", ""Data berhasil dihapus!"");
                                        } else {
                                            NotifikasiError(""Error"", ""Data gagal dihapus!"")
                                        }
                                        LoadDatatableAnggotaTim();
                                    }
                                });
                            }
                        });
                    return false;
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });



    }
    //--***************************************END DELETE ******************************************//
    //-");
            WriteLiteral(@"-***************************************START EDIT ******************************************//
    function EditAnggotaTim(Id) {
        ShowModal('bd-example-modal-lg');

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    //ShowModal('bd-example-modal-lg');

                    StateTempClient = ""edit"";
                    SearchData = { ""Id"": Id }
                    UrlPartialView = '../CreateProject/EditAnggotaTimTemp';
                    LoadPartialViewData(UrlPartialView, function (data) {
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        ValidationFormAnggotaTim();
                        var PeriodeEstimasiP");
            WriteLiteral(@"roject = $(""#TanggalEstimasiDone"").val();
                        var PeriodeSearchSplitArray = PeriodeEstimasiProject.split(""-"");

                        RangeDateDefault('TanggalTargetPenyelesaianAnggotaTim', PeriodeSearchSplitArray[0].split(' ').join(''), PeriodeSearchSplitArray[1].split(' ').join(''));

                        DropdownDataJobPositionServerSideModal(""JobPositionId"", ""100"", false);
                        DropdownDataAllPegawaiServerSideModal(""PegawaiId"", ""100"", false);
                        $('#Keterangan').summernote({
                            placeholder: 'Masukkan Deskripsi Kerjaan',
                            height: 300,
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'underline', 'clear']],
                                ['color', ['color']],
                                ['para', ['ul', 'ol', 'paragraph']],
                                ['table', ['table']],
   ");
            WriteLiteral(@"                             ['insert', ['link', 'picture', 'video']],
                                ['view', ['fullscreen', 'codeview', 'help']]
                            ]
                        });
                        $(""input[name=SendAsTask][value=True]"").prop(""checked"", true);


                    }, SearchData);
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }
    //--***************************************END EDIT ******************************************//


</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
