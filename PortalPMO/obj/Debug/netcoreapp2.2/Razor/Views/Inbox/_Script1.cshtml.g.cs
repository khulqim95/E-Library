#pragma checksum "C:\work\Portal PMO\PortalPMO\Views\Inbox\_Script1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e5b7cf23d10500eec823d5056e4489e0678bac51"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Inbox__Script1), @"mvc.1.0.view", @"/Views/Inbox/_Script1.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Inbox/_Script1.cshtml", typeof(AspNetCore.Views_Inbox__Script1))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\work\Portal PMO\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO;

#line default
#line hidden
#line 2 "C:\work\Portal PMO\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e5b7cf23d10500eec823d5056e4489e0678bac51", @"/Views/Inbox/_Script1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ba151424cb7e4ff7d935c55cfcaa12c04b783fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Inbox__Script1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 180, true);
            WriteLiteral("<script type=\"text/javascript\">\r\n    var State = \'\';\r\n    var TableUpcomingProject;\r\n    var TableOverdueProject;\r\n    var PresentasePenyelesaian = 0;\r\n    var IdDropdwonDefault = ");
            EndContext();
            BeginContext(181, 35, false);
#line 6 "C:\work\Portal PMO\PortalPMO\Views\Inbox\_Script1.cshtml"
                       Write(Html.Raw(ViewBag.IdDropdwonDefault));

#line default
#line hidden
            EndContext();
            BeginContext(216, 34, true);
            WriteLiteral(";\r\n    var TextDropdwonDefault = \'");
            EndContext();
            BeginContext(251, 37, false);
#line 7 "C:\work\Portal PMO\PortalPMO\Views\Inbox\_Script1.cshtml"
                          Write(Html.Raw(ViewBag.TextDropdwonDefault));

#line default
#line hidden
            EndContext();
            BeginContext(288, 202, true);
            WriteLiteral("\';\r\n    var TableSolicite;\r\n    var TableProspek;\r\n    var TablePipeline;\r\n    var TableFasilitasKredit;\r\n    var TableInbox;\r\n    var UnitId;\r\n    var UserId;\r\n\r\n\r\n    $(document).ready(function () {\r\n");
            EndContext();
            BeginContext(630, 21019, true);
            WriteLiteral(@"        LoadDataTableInbox();
        LoadDataTableSolicite();
        LoadDataTableProspek();
        LoadDataTablePipeline();
        DropdownDataRMServerSide(""RMId"", ""100"", false);
        DropdownDataWilayahServerSide(""UnitId"", ""100"", false);
        //DropdownDataAllPegawaiServerSide(""PegawaiIdSearchParam"", ""100"", false);
        //DropdownUnitServerSide(""UnitIdSearchParam"", ""100"", false);
        //GetListAllPendingTask();
        //LoadDataBeranda();
        RangeDateDefault(""PeriodeParamSearch"");

    });

    function ClearSearchParameter() {
        ClearDropdown('PegawaiIdSearchParam');
        $('#PegawaiIdSearchParam').append('<option value=""' + IdDropdwonDefault + '"" selected>' + TextDropdwonDefault + '</option>');
        $('#PeriodeParamSearch').val('');

        LoadDataBeranda();
    }

    function LoadDataBeranda() {
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil ");
            WriteLiteral(@"== true) {
                    $.ajax({
                        url: ""../Home/GetAllDataPendingTask"",
                        type: 'POST',
                        data: { ""UnitId"": $(""#UnitId"").val(), ""UserId"": $(""#RMId"").val() },
                        success: function (d) {
                            debugger;
                            console.log(d)
                            var unitid = $(""#UnitId"").val();
                            var userid = $(""#RMId"").val();

                            UnitId = unitid;
                            UserId = userid;
                            var TotalSolicite = d.tblSolicite[0].Total_Solicite;
                            var TotalProspek = d.tblProspek[0].Total_Prospek;
                            var TotalPipeline = d.tblPipeline[0].Total_Pipeline;
                            var MaksimumKreditSolicite = d.tblSolicite[0].MaksimumKredit;
                            var MaksimumKreditProspek = d.tblProspek[0].MaksimumKredit;
                ");
            WriteLiteral(@"            var MaksimumKreditPipeline = d.tblPipeline[0].MaksimumKredit;

                            $('#BerandaTotalSolicite').text(TotalSolicite);
                            $('#BerandaTotalProspek').text(TotalProspek);
                            $('#BerandaTotalPipeline').text(TotalPipeline);

                            $('#BerandaTotalSoliciteChild').text(TotalSolicite);
                            $('#BerandaTotalProspekChild').text(TotalProspek);
                            $('#BerandaTotalPipelineChild').text(TotalPipeline);

                            $('#BerandaMaksimumKreditSolicite').text(MaksimumKreditSolicite);
                            $('#BerandaMaksimumKreditProspek').text(MaksimumKreditProspek);
                            $('#BerandaMaksimumKreditPipeline').text(MaksimumKreditPipeline);

                            $('#UnitIdLoad').text(unitid);
                            $('#UserIdLoad').text(userid);
                            LoadDataTableSolicite();
           ");
            WriteLiteral(@"                 LoadDataTableProspek();
                            LoadDataTablePipeline();

                            if (TotalSolicite == 0 && TotalProspek == 0 && TotalPipeline == 0) {
                                $(""#divChart2"").show();
                                $('#divChart').hide();
                            } else {
                                $('#divChart').show();
                                $(""#divChart2"").hide();
                                var chart1 = new CanvasJS.Chart(""chartContainer1"", {
                                    exportEnabled: true,
                                    animationEnabled: true,
                                    colorSet: ""greenShades"",
                                    title: {
                                        text: """"
                                    },
                                    legend: {
                                        cursor: ""pointer"",
                                        itemclick: exp");
            WriteLiteral(@"lodePie
                                    },
                                    data: [{
                                        type: ""pie"",
                                        showInLegend: true,
                                        toolTipContent: ""{name}: <strong>{y} Debitur</strong>"",
                                        indexLabel: ""{name} - {prosentase}%"",
                                        dataPoints: [
                                            { y: TotalSolicite, prosentase: ((TotalSolicite) / (TotalSolicite + TotalProspek + TotalPipeline) * 100).toFixed(1), name: ""Solicite"", exploded: true },
                                            { y: TotalProspek, prosentase: ((TotalProspek) / (TotalSolicite + TotalProspek + TotalPipeline) * 100).toFixed(1), name: ""Prospek"", exploded: true },
                                            { y: TotalPipeline, prosentase: ((TotalPipeline) / (TotalSolicite + TotalProspek + TotalPipeline) * 100).toFixed(1), name: ""Pipeline"", exploded: t");
            WriteLiteral(@"rue },
                                            //{ y: response.Abu, prosentase: ((response.Abu) / (response.Hijau + response.Kuning + response.Merah + response.Abu) * 100).toFixed(1), name: ""Abu-abu"", exploded: true }
                                        ]
                                    }]
                                });
                                chart1.render();
                            }

                        }
                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }


    function explodePie(e) {
        if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === ""undefined"" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
            e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
        } else {
            e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
        }
        e.chart.render()");
            WriteLiteral(@";

    }

    function LoadTableUpcomingProject()
    {
        if (TableUpcomingProject != undefined) {
            TableUpcomingProject.destroy();
        }
        TableUpcomingProject = $('#TableUpcomingProject').DataTable({
                                fixedHeader: {
                                    header: true
                                },
                                pageLength: 10,
                                orderCellsTop: true,
                                ""scrollY"": ""270px"",
                                ""scrollCollapse"": true,
                                responsive: true,
                                processing: true, // untuk menampilkan bar prosessing
                                serverSide: true, // untuk proses server side datatable harus diset true
                                orderMulti: false, // untuk disable multi order column
                                retrieve: true,
                                //autoWidth: true,
     ");
            WriteLiteral(@"                           dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                                //data: dataUpcomingProject,
                                ajax: {
                                    ""url"": '../Home/LoadDataProjectByTimeline',
                                    ""type"": ""POST"",
                                    ""datatype"": ""json"",
                                    ""data"": { ""TypeTable"": ""1"", ""PegawaiIdSearchParam"": $(""#PegawaiIdSearchParam"").val(), ""Periode"": $(""#PeriodeParamSearch"").val() },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                                    }
                                },
                                destroy: true,

                                language: {
                                    processing: '<i class=""fa fa-spinner fa-spin fa-3x ");
            WriteLiteral(@"fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                                    info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                                    paginate: {
                                        first: ""Halaman Awal"",
                                        last: ""Halaman Akhir"",
                                        previous: ""Halaman Sebelumnya"",
                                        next: ""Halaman Selanjutnya"",
                                    },
                                    lengthMenu: ""Menampilkan _MENU_ Data"",
                                    emptyTable: ""Data tidak ditemukan"",
                                    infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                                    zeroRecords: ""Data tidak ditemukan""
                                },
                                columns: [
                                    { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                        ");
            WriteLiteral(@"            {
                                        responsivePriority: 2,
                                        ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                                            return '<a href=""javascript:void(0)"" class=""btn btn-facebook"" id=""button-edit"" onclick=""DetailProject(' + full.ProjectId + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Detail Project""><i class=""fa fa-edit btnEdit""></i></a>'
                                        }
                                    },
                                    { responsivePriority: 7, ""data"": ""ProjectNo"", ""name"": ""ProjectNo"" },
                                    { responsivePriority: 3, ""data"": ""NamaProject"", ""name"": ""NamaProject"" },
                                    { responsivePriority: 8, ""data"": ""TanggalProject"", ""name"": ""TanggalProject"" },
                                    { responsivePriority: 7, ""data"": ""TimelinePengerjaan"", ""nam");
            WriteLiteral(@"e"": ""TimelinePengerjaan"" },
                                    {
                                        responsivePriority: 4, ""data"": ""Selisih"", ""name"": ""Selisih""
                                    },
                                    {
                                        responsivePriority: 5, ""data"": ""StatusProject"", ""name"": ""StatusProject"",
                                        ""render"": function (data, type, full, meta) {
                                            if (full.Warna == 'Kuning') {
                                                return '<p class=""mt-2 btn btn-warning disabled""><b>' + data + '</b></p>'
                                            }
                                            else if (full.Warna == 'Biru') {
                                                return '<p class=""mt-2 btn btn-info disabled""><b>' + data + '</b></p>'
                                            }
                                            else if (full.Warna == 'Hijau') {
      ");
            WriteLiteral(@"                                          return '<p class=""mt-2 btn btn-success disabled""><b>' + data + '</b></p>'
                                            }
                                            else if (full.Warna == 'Merah') {
                                                return '<p class=""mt-2 btn btn-danger disabled""><b>' + data + '</b></p>'
                                            }
                                            else {
                                                return '<p class=""mt-2 btn disabled""><b>' + data + '</b></p>'
                                            }
                                        }
                                    }
                                ],
                                ""order"": [[1, ""desc""]]
                            });
    }

    function LoadTableOverdueProject()
    {
        if (TableOverdueProject != undefined) {
            TableOverdueProject.destroy();
        }
        TableOverdueProject = $('#T");
            WriteLiteral(@"ableOverdueProject').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            orderCellsTop: true,
            ""scrollY"": ""270px"",
            ""scrollCollapse"": true,
            responsive: true,
            processing: true, // untuk menampilkan bar prosessing
            serverSide: true, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            retrieve: true,
            //autoWidth: true,
            dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
            ajax: {
                ""url"": '../Home/LoadDataProjectByTimeline',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": { ""TypeTable"": ""2"", ""PegawaiIdSearchParam"": $(""#PegawaiIdSearchParam"").val(), ""Periode"": $(""#PeriodeParamSearch"").val() },
                error: function (jqXHR, textStatus, errorThrown) {
            ");
            WriteLiteral(@"        window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            destroy: true,
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                {
                    responsivePriority: 2,
      ");
            WriteLiteral(@"              ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""DetailProject(' + full.ProjectId + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Detail Project""><i class=""fa fa-edit btnEdit""></i></a></div>'
                    }
                },
                { responsivePriority: 7, ""data"": ""ProjectNo"", ""name"": ""ProjectNo"" },
                { responsivePriority: 3, ""data"": ""NamaProject"", ""name"": ""NamaProject"" },
                { responsivePriority: 8, ""data"": ""TanggalProject"", ""name"": ""TanggalProject"" },
                { responsivePriority: 7, ""data"": ""TimelinePengerjaan"", ""name"": ""TimelinePengerjaan"" },
                {
                    responsivePriority: 4, ""data"": ""Selisih"", ""name"": ""Selisih""
                },
                {
                    responsivePriority");
            WriteLiteral(@": 5, ""data"": ""StatusProject"", ""name"": ""StatusProject"",
                    ""render"": function (data, type, full, meta) {
                        if (full.Warna == 'Kuning') {
                            return '<p class=""mt-2 btn btn-warning disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Biru') {
                            return '<p class=""mt-2 btn btn-info disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Hijau') {
                            return '<p class=""mt-2 btn btn-success disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Merah') {
                            return '<p class=""mt-2 btn btn-danger disabled""><b>' + data + '</b></p>'
                        }
                        else {
                            return '<p class=""mt-2 btn disabled""><b>' + data + '</b></p>'
                        }
    ");
            WriteLiteral(@"                }
                }
            ],
            ""order"": [[1, ""desc""]]
        });
    }

    function CreateProgressMeter(total)
    {
        $(""#ChartDiv"").html('');
        $(""#ChartDiv"").append('<div id=""progress-meter"" class=""mx-auto""></div>');

        var fm = new FluidMeter();
                fm.init({
                    targetContainer: document.getElementById(""progress-meter""),
                    fillPercentage: total,
                  options: {
                    fontFamily: ""Raleway"",
                    drawPercentageSign: true,
                    drawBubbles: true,
                    size: 300,
                    borderWidth: 19,
                    backgroundColor: ""#e2e2e2"",
                    foregroundColor: ""#fafafa"",
                    foregroundFluidLayer: {
                      fillStyle: ""teal"",
                      angularSpeed: 100,
                      maxAmplitude: 12,
                      frequency: 30,
                    ");
            WriteLiteral(@"  horizontalSpeed: -150
                    },
                    backgroundFluidLayer: {
                      fillStyle: ""pink"",
                      angularSpeed: 100,
                      maxAmplitude: 9,
                      frequency: 30,
                      horizontalSpeed: 150
                    }
                  }
                });
        $(""#labelPrecentase"").show();
    }

    function DetailProject(Id) {
        window.open('../DetailProject/View?ProjectId=' + Id, '_blank');
    }

    function GetListAllPendingTask() {
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    $.ajax({
                        url: ""../Home/GetAllDataPendingTask"",
                        type: 'POST',
                        data: { ""PegawaiIdSearch"": $(""#PegawaiIdSearchParam"").val(), ""Periode"": $(""#PeriodeParamSearch"").val()},
                        succe");
            WriteLiteral(@"ss: function (d) {
                            console.log(d)
                            if (d != null) {
                                $(""#DivListProgressTaskList"").show();
                                $(""#emptyAllPendingTask"").hide();
                                $('#ListProgressTaskList').html("""");
                                $.each(d, function (index, value) {
                                    $('#ListProgressTaskList').append('<li class=""list-group-item"">' +
                                        '<div class=""todo-indicator bg-warning""></div>' +
                                        '<div class=""widget-content p-0"">' +
                                        '<div class=""widget-content-wrapper"">' +
                                        '<div class=""widget-content-left"">' +
                                        '<div class=""widget-heading"">' +
                                        '<span style=""font-size:8px; font-weight:bold"">' + value.TimelinePengerjaan + ' (' + valu");
            WriteLiteral(@"e.Selisih+' hari)</span><br />' +
                                        '<p><b>' + value.ProjectNo +'</b></p>' +
                                        '<p style=""margin-top:-15px;"">' + value.NamaProject+'</p>' +
                                        '</div>' +
                                        '<div class=""widget-subheading"" style=""margin-top:-15px;""><i>' + value.DetailRequirment+'</i></div>' +
                                        '<div class=""widget-content"">' +
                                        '<a href=""javascript:void(0)"" class=""badge badge-pill badge-success pull-right"" style=""margin-right:10px !important;"" onclick=""DetailProject(' + value.ProjectId+')"">Detail Project</a' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '</li>');
                                });
            ");
            WriteLiteral(@"                }
                            else {
                                $(""#DivListProgressTaskList"").hide();
                                $(""#emptyAllPendingTask"").show();
                            }
                        }
                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function ViewFasilitas(Id) {
        SearchData = { ""Id"": Id }
        UrlPartialView = '");
            EndContext();
            BeginContext(21650, 41, false);
#line 406 "C:\work\Portal PMO\PortalPMO\Views\Inbox\_Script1.cshtml"
                     Write(Url.Content("~/Home/ViewFasilitasKredit"));

#line default
#line hidden
            EndContext();
            BeginContext(21691, 445, true);
            WriteLiteral(@"';
        LoadPartialViewData(UrlPartialView, function (data) {
            var modalbody = $('#LoadContent');
            modalbody.html(data);
            $('#ModalForm').modal({
                backdrop: 'static',
                keyboard: false
            });
            LoadDataTableFasilitasKredit(Id)
        }, SearchData);
    }

    function ViewInbox(Id) {
        SearchData = { ""Id"": Id }
        UrlPartialView = '");
            EndContext();
            BeginContext(22137, 42, false);
#line 420 "C:\work\Portal PMO\PortalPMO\Views\Inbox\_Script1.cshtml"
                     Write(Url.Content("~/Inbox/ViewFasilitasKredit"));

#line default
#line hidden
            EndContext();
            BeginContext(22179, 1123, true);
            WriteLiteral(@"';
        LoadPartialViewData(UrlPartialView, function (data) {
            var modalbody = $('#LoadContent');
            modalbody.html(data);
            $('#ModalForm').modal({
                backdrop: 'static',
                keyboard: false
            });
            $('#TextAreaPengaturan').summernote({
                height: 400,   //set editable area's height
                codemirror: { // codemirror options
                    theme: 'monokai'
                },
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ol', 'ul', 'paragraph', 'height']],
                    ['table', ['table']],
                    ['insert', ['link']],
                    ['view', ['undo', 'redo");
            WriteLiteral("\', \'fullscreen\', \'codeview\', \'help\']]\r\n                ]\r\n            });\r\n            var text =  ");
            EndContext();
            BeginContext(23303, 38, false);
#line 445 "C:\work\Portal PMO\PortalPMO\Views\Inbox\_Script1.cshtml"
                   Write(Html.Raw(Json.Serialize(ViewBag.Text)));

#line default
#line hidden
            EndContext();
            BeginContext(23341, 44412, true);
            WriteLiteral(@"

            $(""#TextAreaPengaturan"").summernote(""code"", text);
            LoadDataTableFasilitasKredit(Id)
        }, SearchData);
    }

    function LoadDataTableInbox(data) {
        debugger;
        if (TableInbox != undefined) {
            TableInbox.destroy();
        }

        TableInbox = $('#TableInbox').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            orderCellsTop: true,
            responsive: true,
            processing: true, // untuk menampilkan bar prosessing
            serverSide: true, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            retrieve: true,
            //autoWidth: true,
            dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
            //data: data,
            ajax: {
                ""url"": '../Home/LoadDataTableSolicite',
    ");
            WriteLiteral(@"            ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": { ""UnitId"": $('#UnitId').val(), ""UserId"": $('#RMId').val() },
                error: function (jqXHR, textStatus, errorThrown) {
                    window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data ti");
            WriteLiteral(@"dak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                {
                    responsivePriority: 2,
                    ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        //return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                        //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
                        //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-tras");
            WriteLiteral(@"h btnDelete""></i></a></div>'

                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewInbox(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

                    }
                },
                { responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
                { responsivePriority: 4, ""data"": ""CIF"", ""name"": ""Cif"" },
                { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
                { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" }
            ],
            ""order"": [[1, ""desc""]]
        });

        TableInbox.columns.adjust().responsive.recalc();
    }

    function LoadDataTableSolicite(data) {
        debugger;
        if (TableSolicite != undefined) {
            TableSolicite.destroy();
        }

        TableSolicite = $('#TableSolicite').DataTable({
            fi");
            WriteLiteral(@"xedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            orderCellsTop: true,
            responsive: true,
            processing: true, // untuk menampilkan bar prosessing
            serverSide: true, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            retrieve: true,
            //autoWidth: true,
            dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
            //data: data,
            ajax: {
                ""url"": '../Home/LoadDataTableSolicite',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": { ""UnitId"": $('#UnitId').val(), ""UserId"": $('#RMId').val() },
                error: function (jqXHR, textStatus, errorThrown) {
                    window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            l");
            WriteLiteral(@"anguage: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                {
                    responsivePriority: 2,
                    ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        //retu");
            WriteLiteral(@"rn '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                            //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
                            //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'

                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFasilitas(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

                    }
                },
                { ");
            WriteLiteral(@"responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
                { responsivePriority: 4, ""data"": ""CIF"", ""name"": ""Cif"" },
                { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
                { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" },
                { responsivePriority: 7, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" }
            ],
            ""order"": [[1, ""desc""]]
        });

        TableSolicite.columns.adjust().responsive.recalc();
    }

    function LoadDataTableProspek(data) {
        debugger;
        if (TableProspek != undefined) {
            TableProspek.destroy();
        }
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableProspek = $('#TableProspek').DataTable({
                        fixedHeader: {
                            header: true
             ");
            WriteLiteral(@"           },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
                        ajax: {
                            ""url"": '../Home/LoadDataTableProspek',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""UnitId"": $('#UnitId').val(), ""UserId"": $('#RMId').val() },
                            error: function (jqXHR, textStatus");
            WriteLiteral(@", errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemuk");
            WriteLiteral(@"an""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            {
                                responsivePriority: 2,
                                ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                                    //return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                                    //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
                                    //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onc");
            WriteLiteral(@"lick=""DeleteFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'

                                    return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFasilitas(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

                                }
                            },
                            { responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
                            { responsivePriority: 4, ""data"": ""CIF"", ""name"": ""CIF"" },
                            { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
                            { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" },
                            { responsivePriority: 7, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" }
                        ],
                        ""order"": [[1, ""de");
            WriteLiteral(@"sc""]]
                    });

                    //$.fn.dataTable.ext.errMode = 'throw';

                    //--------------------------Function untuk melempar parameter search ---------------------//
                    //Untuk melempar parameter search
                    //oTable = $('#Table').DataTable();
                    //$('#BtnSearch').click(function () {
                    //    TableProspek.columns(2).search($('#txtKodeSearchParam').val().trim());
                    //    TableProspek.columns(3).search($('#txtNamaSearchParam').val().trim());


                    //    //hit search ke server
                    //    TableProspek.draw();
                    //});


                    //---------------------Function untuk reset data pencarian----------------//
                    $('#BtnClearSearch').click(function () {
                        $('#txtKodeSearchParam').val("""");
                        $('#txtNamaSearchParam').val("""");

                        TablePros");
            WriteLiteral(@"pek.columns(2).search($('#txtKodeSearchParam').val().trim());
                        TableProspek.columns(3).search($('#txtNamaSearchParam').val().trim());
                        //hit search ke server
                        TableProspek.draw();
                    });

                    TableProspek.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }
    function LoadDataTablePipeline(data) {
        debugger;
        if (TablePipeline != undefined) {
            TablePipeline.destroy();
        }
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TablePipeline = $('#TablePipeline').DataTable({
                        fixedHeader: {
                            header: true
                        },
        ");
            WriteLiteral(@"                pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
                        ajax: {
                            ""url"": '../Home/LoadDataTablePipeline',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""UnitId"": $('#UnitId').val(), ""UserId"": $('#RMId').val() },
                            error: function (jqXHR, textStatus, errorThrown) {
    ");
            WriteLiteral(@"                            window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                 ");
            WriteLiteral(@"       },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            {
                                responsivePriority: 2,
                                ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                                    //return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                                    //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
                                    //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteFAQ(' + fu");
            WriteLiteral(@"ll.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'

                                    return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFasilitas(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

                                }
                            },
                            { responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
                            { responsivePriority: 4, ""data"": ""CIF"", ""name"": ""CIF"" },
                            { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
                            { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" },
                            { responsivePriority: 7, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" }
                        ],
                        ""order"": [[1, ""desc""]]
               ");
            WriteLiteral(@"     });

                    //$.fn.dataTable.ext.errMode = 'throw';

                    //--------------------------Function untuk melempar parameter search ---------------------//
                    //Untuk melempar parameter search
                    //oTable = $('#Table').DataTable();
                    //$('#BtnSearch').click(function () {
                    //    TablePipeline.columns(2).search($('#txtKodeSearchParam').val().trim());
                    //    TablePipeline.columns(3).search($('#txtNamaSearchParam').val().trim());


                    //    //hit search ke server
                    //    TablePipeline.draw();
                    //});


                    //---------------------Function untuk reset data pencarian----------------//
                    $('#BtnClearSearch').click(function () {
                        $('#txtKodeSearchParam').val("""");
                        $('#txtNamaSearchParam').val("""");

                        TablePipeline.columns(2).sea");
            WriteLiteral(@"rch($('#txtKodeSearchParam').val().trim());
                        TablePipeline.columns(3).search($('#txtNamaSearchParam').val().trim());
                        //hit search ke server
                        TablePipeline.draw();
                    });

                    TablePipeline.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    //function LoadDataTableSoliciteById() {
    //    debugger;
    //    //if (TableSolicite != undefined) {
    //    //    TableSolicite.DataTable.destroy();
    //    //}
    //    $.ajax({
    //        type: 'GET',
    //        url: '../Login/CekSession',
    //        success: function (hasil) {
    //            if (hasil == true) {
    //                TableSolicite = $('#TableSolicite').DataTable({
    //                    fixedHeader: {
    //                        header: true
    // ");
            WriteLiteral(@"                   },
    //                    pageLength: 10,
    //                    destroy: true,
    //                    orderCellsTop: true,
    //                    responsive: true,
    //                    processing: true, // untuk menampilkan bar prosessing
    //                    serverSide: true, // untuk proses server side datatable harus diset true
    //                    orderMulti: false, // untuk disable multi order column
    //                    retrieve: true,
    //                    //autoWidth: true,
    //                    dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
    //                    //data: data,
    //                    ajax: {
    //                        ""url"": '../Home/LoadDataTableSoliciteById',
    //                        ""type"": ""POST"",
    //                        ""datatype"": ""json"",
    //                        ""data"": { ""UnitId"": UnitId, ""UserId"": UserId },
    //                        error: fu");
            WriteLiteral(@"nction (jqXHR, textStatus, errorThrown) {
    //                            window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
    //                        }
    //                    },
    //                    language: {
    //                        processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
    //                        info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
    //                        paginate: {
    //                            first: ""Halaman Awal"",
    //                            last: ""Halaman Akhir"",
    //                            previous: ""Halaman Sebelumnya"",
    //                            next: ""Halaman Selanjutnya"",
    //                        },
    //                        lengthMenu: ""Menampilkan _MENU_ Data"",
    //                        emptyTable: ""Data tidak ditemukan"",
    //                        infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
    /");
            WriteLiteral(@"/                        zeroRecords: ""Data tidak ditemukan""
    //                    },
    //                    columns: [
    //                        { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
    //                        {
    //                            responsivePriority: 2,
    //                            ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
    //                                //return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
    //                                //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
    //                                //+ '<a href=""ja");
            WriteLiteral(@"vascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'

    //                                return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFasilitas(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

    //                            }
    //                        },
    //                        { responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
    //                        { responsivePriority: 4, ""data"": ""CIF"", ""name"": ""Cif"" },
    //                        { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
    //                        { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" },
    //                        { responsivePriority: 7, ""data"": ""MaksimumKredit"", ""name""");
            WriteLiteral(@": ""MaksimumKredit"" }
    //                    ],
    //                    ""order"": [[1, ""desc""]]
    //                });

    //                //$.fn.dataTable.ext.errMode = 'throw';

    //                //--------------------------Function untuk melempar parameter search ---------------------//
    //                //Untuk melempar parameter search
    //                //oTable = $('#Table').DataTable();
    //                //$('#BtnSearch').click(function () {
    //                //    TableSolicite.columns(2).search($('#txtKodeSearchParam').val().trim());
    //                //    TableSolicite.columns(3).search($('#txtNamaSearchParam').val().trim());


    //                //    //hit search ke server
    //                //    TableSolicite.draw();
    //                //});


    //                //---------------------Function untuk reset data pencarian----------------//
    //                $('#BtnClearSearch').click(function () {
    //                    $('");
            WriteLiteral(@"#txtKodeSearchParam').val("""");
    //                    $('#txtNamaSearchParam').val("""");

    //                    TableSolicite.columns(2).search($('#txtKodeSearchParam').val().trim());
    //                    TableSolicite.columns(3).search($('#txtNamaSearchParam').val().trim());
    //                    //hit search ke server
    //                    TableSolicite.draw();
    //                });

    //                TableSolicite.columns.adjust().responsive.recalc();
    //            }
    //            else {
    //                window.location.href = ""../Login/Login?a=true"";
    //            }
    //        }
    //    });
    //}
    //function LoadDataTableProspekById() {
    //    debugger;
    //    //if (TableProspek != undefined) {
    //    //    TableProspek.DataTable.destroy();
    //    //}
    //    $.ajax({
    //        type: 'GET',
    //        url: '../Login/CekSession',
    //        success: function (hasil) {
    //            if (hasil == true)");
            WriteLiteral(@" {
    //                TableProspek = $('#TableProspek').DataTable({
    //                    fixedHeader: {
    //                        header: true
    //                    },
    //                    pageLength: 10,
    //                    destroy: true,
    //                    orderCellsTop: true,
    //                    responsive: true,
    //                    processing: true, // untuk menampilkan bar prosessing
    //                    serverSide: true, // untuk proses server side datatable harus diset true
    //                    orderMulti: false, // untuk disable multi order column
    //                    retrieve: true,
    //                    //autoWidth: true,
    //                    dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
    //                    //data: data,
    //                    ajax: {
    //                        ""url"": '../Home/LoadDataTableProspekById',
    //                        ""type"": ""POST"",
    ");
            WriteLiteral(@"//                        ""datatype"": ""json"",
    //                        ""data"": { ""UnitId"": UnitId, ""UserId"": UserId },
    //                        error: function (jqXHR, textStatus, errorThrown) {
    //                            window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
    //                        }
    //                    },
    //                    language: {
    //                        processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
    //                        info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
    //                        paginate: {
    //                            first: ""Halaman Awal"",
    //                            last: ""Halaman Akhir"",
    //                            previous: ""Halaman Sebelumnya"",
    //                            next: ""Halaman Selanjutnya"",
    //                        },
    //                        lengthMenu: ""Menampilkan _M");
            WriteLiteral(@"ENU_ Data"",
    //                        emptyTable: ""Data tidak ditemukan"",
    //                        infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
    //                        zeroRecords: ""Data tidak ditemukan""
    //                    },
    //                    columns: [
    //                        { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
    //                        {
    //                            responsivePriority: 2,
    //                            ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
    //                                //return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
    //                                //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" oncli");
            WriteLiteral(@"ck=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
    //                                //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'

    //                                return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFasilitas(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

    //                            }
    //                        },
    //                        { responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
    //                        { responsivePriority: 4, ""data"": ""CIF"", ""name"": ""CIF"" },
    //                        { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
    //                ");
            WriteLiteral(@"        { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" },
    //                        { responsivePriority: 7, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" }
    //                    ],
    //                    ""order"": [[1, ""desc""]]
    //                });

    //                //$.fn.dataTable.ext.errMode = 'throw';

    //                //--------------------------Function untuk melempar parameter search ---------------------//
    //                //Untuk melempar parameter search
    //                //oTable = $('#Table').DataTable();
    //                //$('#BtnSearch').click(function () {
    //                //    TableProspek.columns(2).search($('#txtKodeSearchParam').val().trim());
    //                //    TableProspek.columns(3).search($('#txtNamaSearchParam').val().trim());


    //                //    //hit search ke server
    //                //    TableProspek.draw();
    //                //});


    //                //-------");
            WriteLiteral(@"--------------Function untuk reset data pencarian----------------//
    //                $('#BtnClearSearch').click(function () {
    //                    $('#txtKodeSearchParam').val("""");
    //                    $('#txtNamaSearchParam').val("""");

    //                    TableProspek.columns(2).search($('#txtKodeSearchParam').val().trim());
    //                    TableProspek.columns(3).search($('#txtNamaSearchParam').val().trim());
    //                    //hit search ke server
    //                    TableProspek.draw();
    //                });

    //                TableProspek.columns.adjust().responsive.recalc();
    //            }
    //            else {
    //                window.location.href = ""../Login/Login?a=true"";
    //            }
    //        }
    //    });
    //}
    //function LoadDataTablePipelineById() {
    //    debugger;
    //    //if (TablePipeline != undefined) {
    //    //    TablePipeline.DataTable.destroy();
    //    //}
    //   ");
            WriteLiteral(@" $.ajax({
    //        type: 'GET',
    //        url: '../Login/CekSession',
    //        success: function (hasil) {
    //            if (hasil == true) {
    //                TablePipeline = $('#TablePipeline').DataTable({
    //                    fixedHeader: {
    //                        header: true
    //                    },
    //                    pageLength: 10,
    //                    destroy: true,
    //                    orderCellsTop: true,
    //                    responsive: true,
    //                    processing: true, // untuk menampilkan bar prosessing
    //                    serverSide: true, // untuk proses server side datatable harus diset true
    //                    orderMulti: false, // untuk disable multi order column
    //                    retrieve: true,
    //                    //autoWidth: true,
    //                    dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
    //                    //data: data");
            WriteLiteral(@",
    //                    ajax: {
    //                        ""url"": '../Home/LoadDataTablePipelineById',
    //                        ""type"": ""POST"",
    //                        ""datatype"": ""json"",
    //                        ""data"": { ""UnitId"": UnitId, ""UserId"": UserId },
    //                        error: function (jqXHR, textStatus, errorThrown) {
    //                            window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
    //                        }
    //                    },
    //                    language: {
    //                        processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
    //                        info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
    //                        paginate: {
    //                            first: ""Halaman Awal"",
    //                            last: ""Halaman Akhir"",
    //                            previous: ""Halaman Sebel");
            WriteLiteral(@"umnya"",
    //                            next: ""Halaman Selanjutnya"",
    //                        },
    //                        lengthMenu: ""Menampilkan _MENU_ Data"",
    //                        emptyTable: ""Data tidak ditemukan"",
    //                        infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
    //                        zeroRecords: ""Data tidak ditemukan""
    //                    },
    //                    columns: [
    //                        { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
    //                        {
    //                            responsivePriority: 2,
    //                            ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
    //                                //return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""EditFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Ubah Data""><i cla");
            WriteLiteral(@"ss=""fa fa-edit btnEdit""></i></a>'
    //                                //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
    //                                //+ '<a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-delete"" onclick=""DeleteFAQ(' + full.Id + ')""  data-toggle=""tooltip"" title=""Delete Data""><i class=""fa fa-trash btnDelete""></i></a></div>'

    //                                return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=""ViewFasilitas(' + full.Id + ')""  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'

    //                            }
    //                        },
    //                        { responsivePriority: 3, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
    //                        { responsive");
            WriteLiteral(@"Priority: 4, ""data"": ""CIF"", ""name"": ""CIF"" },
    //                        { responsivePriority: 5, ""data"": ""Nama_RM"", ""name"": ""Nama_RM"" },
    //                        { responsivePriority: 6, ""data"": ""Nama_Unit"", ""name"": ""Nama_Unit"" },
    //                        { responsivePriority: 7, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" }
    //                    ],
    //                    ""order"": [[1, ""desc""]]
    //                });

    //                //$.fn.dataTable.ext.errMode = 'throw';

    //                //--------------------------Function untuk melempar parameter search ---------------------//
    //                //Untuk melempar parameter search
    //                //oTable = $('#Table').DataTable();
    //                //$('#BtnSearch').click(function () {
    //                //    TablePipeline.columns(2).search($('#txtKodeSearchParam').val().trim());
    //                //    TablePipeline.columns(3).search($('#txtNamaSearchParam').val().trim());


");
            WriteLiteral(@"    //                //    //hit search ke server
    //                //    TablePipeline.draw();
    //                //});


    //                //---------------------Function untuk reset data pencarian----------------//
    //                $('#BtnClearSearch').click(function () {
    //                    $('#txtKodeSearchParam').val("""");
    //                    $('#txtNamaSearchParam').val("""");

    //                    TablePipeline.columns(2).search($('#txtKodeSearchParam').val().trim());
    //                    TablePipeline.columns(3).search($('#txtNamaSearchParam').val().trim());
    //                    //hit search ke server
    //                    TablePipeline.draw();
    //                });

    //                TablePipeline.columns.adjust().responsive.recalc();
    //            }
    //            else {
    //                window.location.href = ""../Login/Login?a=true"";
    //            }
    //        }
    //    });
    //}

    function Load");
            WriteLiteral(@"DataTableFasilitasKredit(data) {
        debugger;
        //if (TableFasilitasKredit != undefined) {
        //    TableFasilitasKredit.DataTable.destroy();
        //}
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableFasilitasKredit = $('#TableFasilitasKredit').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        ");
            WriteLiteral(@"//autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
                        ajax: {
                            ""url"": '../Home/LoadDataTableFasilitasKredit',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": data },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
       ");
            WriteLiteral(@"                         last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            { responsivePriority: 2, ""data"": ""JenisFasilitas"", ""name"": ""JenisFasilitas"" },
                            { responsivePriority: 3, ""data"": ""Valuta"", ""name"": ""Valuta"" },
                            { responsivePriority: 4, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" },
                            { responsivePriority: 5, ""data"": ""Tujuan"", ""name");
            WriteLiteral(@""": ""Tujuan"" },
                            { responsivePriority: 6, ""data"": ""FlowStatus_Name"", ""name"": ""FlowStatus_Name"" },
                            { responsivePriority: 7, ""data"": ""Action_Name"", ""name"": ""Action_Name"" }
                        ],
                        ""order"": [[1, ""desc""]]
                    });

                    //$.fn.dataTable.ext.errMode = 'throw';

                    //--------------------------Function untuk melempar parameter search ---------------------//
                    //Untuk melempar parameter search
                    //oTable = $('#Table').DataTable();
                    $('#BtnSearch').click(function () {
                        TableFasilitasKredit.columns(2).search($('#txtKodeSearchParam').val().trim());
                        TableFasilitasKredit.columns(3).search($('#txtNamaSearchParam').val().trim());


                        //hit search ke server
                        TableFasilitasKredit.draw();
                    });


     ");
            WriteLiteral(@"               //---------------------Function untuk reset data pencarian----------------//
                    $('#BtnClearSearch').click(function () {
                        $('#txtKodeSearchParam').val("""");
                        $('#txtNamaSearchParam').val("""");

                        TableFasilitasKredit.columns(2).search($('#txtKodeSearchParam').val().trim());
                        TableFasilitasKredit.columns(3).search($('#txtNamaSearchParam').val().trim());
                        //hit search ke server
                        TableFasilitasKredit.draw();
                    });

                    TableFasilitasKredit.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    $(""#UnitId"").change(function () {
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {");
            WriteLiteral(@"
                if (hasil == true) {

                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

        $.ajax({
            success: function () {
                DropdownDataRMServerSide(""RMId"", ""100"", false, '', '');
            }
        });

    })


</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
