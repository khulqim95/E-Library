#pragma checksum "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9c67738352bfbf5341e9cc7129fe18539ccc32ee"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__PartialJavascript), @"mvc.1.0.view", @"/Views/Shared/_PartialJavascript.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_PartialJavascript.cshtml", typeof(AspNetCore.Views_Shared__PartialJavascript))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO;

#line default
#line hidden
#line 2 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9c67738352bfbf5341e9cc7129fe18539ccc32ee", @"/Views/Shared/_PartialJavascript.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ba151424cb7e4ff7d935c55cfcaa12c04b783fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__PartialJavascript : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 3986, true);
            WriteLiteral(@"<script>
    var KebijakanUmumDireksiName = """";
    var KebijakanUmumDireksiName = """";

    var popupBlockerChecker = {check:function(b) {
        var a = this;
        b ? /chrome/.test(navigator.userAgent.toLowerCase()) ? setTimeout(function()      {
        a._is_popup_blocked(a, b);
        }, 200) : b.onload = function() {
        a._is_popup_blocked(a, b);
        } : a._displayError();
        }, _is_popup_blocked:function(b, a) {
        0 == 0 < a.innerHeight && b._displayError();
        }, _displayError:function() {
        alert(""Popup Blocker is enabled! Please add this site to your exception list."");
     }};

    function ConvertMonthNameToDate(monthname) {
        //alert(monthname);
        var months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
        var month = months.indexOf(monthname) + 1;
        //alert(month);
        if (month < 10) {
            month = '0' + month;
        }
");
            WriteLiteral(@"        return month;
    }

    //Untuk input hanya number
    function InputOnlyNumber(elementId) {
        $(""#"" + elementId).keypress(validateNumber);
    }

    //Untuk input nominal mata uang dengan menggunakan separator
    function InputNominalUang(elementId) {
        debugger;
        var inputan = document.getElementById(elementId);
        inputan.addEventListener('keyup', function (e) {
            inputan.value = formatRupiah(this.value);
        });
        //$(""#"" + elementId).keypress(validateNumber);
        
    }

    function getColorRandom() {
        var messages = [""#16a085"", ""#2980b9"", ""#8e44ad"", ""#2c3e50"", ""#e67e22"", ""#c0392b"", ""#7f8c8d""];
        return messages[Math.floor(Math.random() * messages.length)];
    }

    function GetTwoFirstCharFromWord(value) {
        var abbr = """";
        value = value.split(' ');
        if (value.length < 2) {
            return value[0].substr(0, 1).toUpperCase();
        }
        else {
            for (i = 0; i ");
            WriteLiteral(@"< 2; i++) {
                abbr += value[i].substr(0, 1);
            }
        }
        return abbr;
    }


      //--***************************************START SHOW PARAMETER SEARCH ******************************************//
    //function untuk togle parameter
    function ShowParameter(Collapse, ShowParameter, HideParameter) {
        //var paramSearch = document.getElementById(FullParameter);
        var showParameter = document.getElementById(ShowParameter);
        var hideParameter = document.getElementById(HideParameter);
        var divCollapse = document.getElementById(Collapse);

        divCollapse.style.display = 'block';
        //$(""#"" + Collapse).collapse('show');
        //paramSearch.style.display = 'block';
        showParameter.style.display = 'none';
        hideParameter.style.display = 'block';

        $('html, body').animate({ scrollTop: $('#' + Collapse).offset().top }, 'slow');

    }
    //--***************************************END SHOW PARAMETER ");
            WriteLiteral(@"SEARCH ******************************************//

    //--***************************************START HIDE PARAMETER SEARCH ******************************************//

    function HideParameter(Collapse, ShowParameter, HideParameter) {
        var showParameter = document.getElementById(ShowParameter);
        var hideParameter = document.getElementById(HideParameter);
        var divCollapse = document.getElementById(Collapse);
        divCollapse.style.display = 'none';
        hideParameter.style.display = 'none';
        showParameter.style.display = 'block';
        $('html, body').animate({ scrollTop: $('#' + ShowParameter).offset().top }, 'slow');

    }

    //--***************************************END HIDE PARAMETER SEARCH ******************************************//



     //Get Notification
        function getAllNotification() {
            UrlPartialView = '");
            EndContext();
            BeginContext(3987, 47, false);
#line 103 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Content("~/Utility/GetAllDataNotification"));

#line default
#line hidden
            EndContext();
            BeginContext(4034, 3525, true);
            WriteLiteral(@"';
            LoadPartialViewData(UrlPartialView, function (data) {
                //console.log(data);
                $('#divContentNotif').html('');

                if (data.Jumlah > 0) {
                    $('#divContentJumlahNotif').append('<span class=""label"" style=""background-color:darkorange"">'
                        + '<text id=""txtJmlInbox"">' + data.Jumlah + '</text>'
                        + '</span>')

                    $('#divContentNotif').append('<li class=""dropdown-header"">'
                        + ' <div id=""divContentJumlahInbox"">'
                        + '<text>Jumlah Inbox (' + data.Jumlah + ')</text>'
                        + ' </div>'
                        + '</li>')
                    //$('#DropdownRolePegawai').empty();
                    $.each(data.ListData, function (index, value) {
                        console.log(value)
                        $('#divContentNotif').append('<li class=""media"">'

                            + '<div class=""media");
            WriteLiteral(@"-left"" style=""margin:10px;"">'
                            + '<h5 class=""InitialContentInboxNotif"" style=""background-color:' + value.Warna + '"">4.61</h5>'
                            + '</div>'
                            + '<div class=""media-body"">'
                            + '<h6 class=""media-heading"">' + value.Npp + ' - ' + value.Nama_Pegawai + ' </h6>'
                            + '<p>' + value.Komentar + '</p>'
                            + '<div class=""text-muted f-s-11"">CIF: ' + value.CIF + '</div>'
                            + '<div class=""text-muted f-s-11"">Nama Debitur: ' + value.Nama_Debitur + '</div>'
                            + '<div class=""text-muted f-s-11"">Skor EWS: 4,67</div>'
                            + '<div class=""text-muted f-s-11"">Merah</div>'
                            + '</div>'

                            + '</li>');
                    });
                    $('#divContentNotif').append(' <li class=""dropdown-footer text-center"">'
                        + '<");
            WriteLiteral(@"a href=""../Inbox/Index"">Lihat Semua Kotak Surat</a>'
                        + '</li>')
                }
                else {
                    $('#divContentJumlahNotif').html('');

                    $('#divContentNotif').append('<li class=""dropdown-header"">'
                        + ' <div id=""divContentJumlahInbox"">'
                        + '<text>Tidak ada daftar tugas</text>'
                        + ' </div>'
                        + '</li>')
                }
            });
        }



    //-------------------------------Only Number------------------------//
    function validateNumber(event) {
        var key = window.event ? event.keyCode : event.which;
        if (event.keyCode === 8 || event.keyCode === 46) {
            return true;
        } else if (key < 48 || key > 57) {
            return false;
        } else {
            return true;
        }
    };

    //Format Rupiah
    function formatRupiah(angka, prefix) {
        var number_string = ang");
            WriteLiteral(@"ka.replace(/[^,\d]/g, '').toString(),
            split = number_string.split(','),
            sisa = split[0].length % 3,
            rupiah = split[0].substr(0, sisa),
            ribuan = split[0].substr(sisa).match(/\d{3}/gi);

        if (ribuan) {
            separator = sisa ? '.' : '';
            rupiah += separator + ribuan.join('.');
        }

        return rupiah = split[1] != undefined ? rupiah + ',' + split[1] : rupiah;
");
            EndContext();
            BeginContext(7639, 10022, true);
            WriteLiteral(@"    }

    //--***************************************START NOTIFIKASI SUKSES ******************************************//
    function NotifikasiSukses(title, text) {
        swal({
            title: title,
            text: text,
            icon: 'success',
            timer: 2000,
            buttons: false
        });
    }
    //--***************************************END NOTIFIKASI SUKSES ******************************************//

     //--***************************************START NOTIFIKASI GAGAL ******************************************//
    function NotifikasiError(title, text) {
        swal({
            title: title,
            text: text,
            icon: 'error',
            showCloseButton: true
            //buttons: false
        });
    }
     //--***************************************END NOTIFIKASI GAGAL ******************************************//

    //--***************************************START NOTIFIKASI GAGAL *********************************");
            WriteLiteral(@"*********//
    function NotifikasiAlert(title, text) {
        swal({
            title: title,
            text: text,
            icon: 'warning',
            showCloseButton: true
            //buttons: false
        });
    }
     //--***************************************END NOTIFIKASI GAGAL ******************************************//


    //--***************************************START SHOW PARAMETER SEARCH ******************************************//
    //function untuk togle parameter
    function ShowParameter(Collapse, ShowParameter, HideParameter) {
        //var paramSearch = document.getElementById(FullParameter);
        var showParameter = document.getElementById(ShowParameter);
        var hideParameter = document.getElementById(HideParameter);
        var divCollapse = document.getElementById(Collapse);

        divCollapse.style.display = 'block';
        //$(""#"" + Collapse).collapse('show');
        //paramSearch.style.display = 'block';
        showParameter.s");
            WriteLiteral(@"tyle.display = 'none';
        hideParameter.style.display = 'block';

        $('html, body').animate({ scrollTop: $('#' + Collapse).offset().top }, 'slow');

    }
    //--***************************************END SHOW PARAMETER SEARCH ******************************************//

    //--***************************************START HIDE PARAMETER SEARCH ******************************************//

    function HideParameter(Collapse, ShowParameter, HideParameter) {
        var showParameter = document.getElementById(ShowParameter);
        var hideParameter = document.getElementById(HideParameter);
        var divCollapse = document.getElementById(Collapse);
        divCollapse.style.display = 'none';
        hideParameter.style.display = 'none';
        showParameter.style.display = 'block';
        $('html, body').animate({ scrollTop: $('#' + ShowParameter).offset().top }, 'slow');

    }



    //--***************************************START CLEAR DROPDOWN SELECT2 *************");
            WriteLiteral(@"*****************************//
    function ClearDropdown(elementId) {
        $('#' + elementId).val(null).trigger('change');
    }
    //--***************************************END CLEAR DROPDOWN SELECT2 ******************************************//

    //--***************************************START GET TEXT FOR DROPDOWN ******************************************//
    function GetTextForDropdown(elementDropdown,elementId) {
        var x = elementDropdown.options[elementDropdown.selectedIndex].text;
        $('#' + elementId).val(x);
    }
    //--***************************************END GET TEXT FOR DROPDOWN ******************************************//

    //--***************************************START RANGE DATE DEFAULT ******************************************//
    function RangeDateDefault(elementId,minDate,maxDate)
    {
         $('#'+elementId).daterangepicker({
            opens: 'right',
            locale: { format: 'DD/MM/YYYY' },
            separator: ' to ',
   ");
            WriteLiteral(@"         //startDate: moment().subtract('days', 29),
            //endDate: moment(),
             showDropdowns: false,
             showWeekNumbers: true,
             minDate: minDate,
             maxDate: maxDate,
             //minDate: '01/01/2018',
             //maxDate: '03/12/2018'
        },
        function (start, end) {
            $('#' + elementId + ' input').val(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
            });

        $('#' + elementId).val('')
    }
    //--***************************************END RANGE DATE DEFAULT ******************************************//

    function RangeDateDefaultDefaultValue(elementId, minDate, maxDate) {
        $('#' + elementId).daterangepicker({
            opens: 'right',
            locale: { format: 'DD/MM/YYYY' },
            separator: ' to ',
            //startDate: moment().subtract('days', 29),
            //endDate: moment(),
            minDate: minDate,
            maxDate: maxDate,
     ");
            WriteLiteral(@"   },
            function (start, end) {
                $('#' + elementId + ' input').val(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
            });

    }

    //--***************************************START RANGE DATE ADVANCE ******************************************//
    function AdvanceDateRangePicker(elementId) {
        $('#' + elementId +' span').html(moment().subtract('days', 29).format('D MMMM, YYYY') + ' - ' + moment().format('D MMMM, YYYY'));

        $('#' + elementId).daterangepicker({
            format: 'DD/MM/YYYY',
            //startDate: moment().subtract(29, 'days'),
            //endDate: moment(),
            //minDate: '01/01/2012',
            //maxDate: '12/31/2020',
            //dateLimit: { days: 60 },
            showDropdowns: true,
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,
            ranges: {
                'Today': [moment(), momen");
            WriteLiteral(@"t()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
            opens: 'right',
            drops: 'down',
            buttonClasses: ['btn', 'btn-sm'],
            applyClass: 'btn-primary',
            cancelClass: 'btn-default',
            separator: ' to ',
            locale: {
                applyLabel: 'Submit',
                cancelLabel: 'Cancel',
                fromLabel: 'From',
                toLabel: 'To',
                customRangeLabel: 'Custom',
                daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                monthNames: ['January', 'Fe");
            WriteLiteral(@"bruary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                firstDay: 1
            }
        }, function (start, end, label) {
            $('#' + elementId+' span').html(start.format('D MMMM, YYYY') + ' - ' + end.format('D MMMM, YYYY'));
        });
    }
    //--***************************************END RANGE DATE ADVANCE ******************************************//


     //--***************************************START RANGE DATE ADVANCE ******************************************//
    function AdvanceDateRangePicker(elementId) {
        $('#' + elementId +' span').html(moment().subtract('days', 29).format('D MMMM, YYYY') + ' - ' + moment().format('D MMMM, YYYY'));

        $('#' + elementId).daterangepicker({
            format: 'DD/MM/YYYY',
            //startDate: moment().subtract(29, 'days'),
            //endDate: moment(),
            //minDate: '01/01/2012',
            //maxDate: '12/31/2020',
            //da");
            WriteLiteral(@"teLimit: { days: 60 },
            showDropdowns: true,
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,
            ranges: {
                'Today': [moment(), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')]
            },
            opens: 'right',
            drops: 'down',
            buttonClasses: ['btn', 'btn-sm'],
            applyClass: 'btn-primary',
            cancelClass: 'btn-default',
            separator: ' to ',
            locale: {
                applyLabel: 'Submit',
                cancelLabel: 'Cancel',
                fromLabel: 'From',
                toLabel: 'To',
                customRangeLabel: 'Custom',
                daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December");
            WriteLiteral(@"'],
                //firstDay: 1
            }
        }, function (start, end, label) {
            $('#' + elementId+' span').html(start.format('D MMMM, YYYY') + ' - ' + end.format('D MMMM, YYYY'));
        });
    }
    //--***************************************END RANGE DATE ADVANCE ******************************************//


       //--***************************************START DROPDOWN SERVER SIDE MASTER FORM******************************************//
    function DropdownPegawayByRoleAndUnitServerSide(elementId, jumlahRowPerPage, isMultiple, RoleId, IsManajemenKelolaanPegawai, IsSearchMyKelolaan) {
        var dropdown = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(17662, 55, false);
#line 403 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataPegawaiByUnitAndRole", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(17717, 2509, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage,
                                Role_Id: RoleId,
                                IsManajemenKelolaanPegawai: IsManajemenKelolaanPegawai,
                                IsSearchMyKelolaan: IsSearchMyKelolaan
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: ");
            WriteLiteral(@"{
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                        cache: true
                  },
                  placeholder: {
                      id: '', // or whatever the placeholder value is
                      text: '-Silahkan pilih-' // the text to display as the placeholder
                  },
                    //placeholder: 'Silahkan pilih',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

   ");
            WriteLiteral(@" //--***************************************END DROPDOWN SERVER SIDE MASER FORM******************************************//

     //--***************************************START DROPDOWN SERVER SIDE UNIT******************************************//
    function DropdownUnitServerSide(elementId, jumlahRowPerPage, isMultiple, typeUnit) {
        var dropdownPegawai = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(20227, 39, false);
#line 453 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataUnit", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(20266, 2198, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                TypeUnit: typeUnit,
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                          ");
            WriteLiteral(@"  };
                        },
                        cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE UNIT ******************************************//

      //--***************************************START DROPDOWN SERVER SIDE UNIT******************************************//
    function DropdownUnitModalServerSide(elementId, jumlahRowPerPage, isMultiple, typeUnit) {
        var dropdownPegawai = ");
            WriteLiteral("$(\"#\" + elementId).select2({\r\n            dropdownParent: $(\'#ModalForm .modal-content\'),\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(22465, 39, false);
#line 498 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataUnit", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(22504, 2133, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                TypeUnit: typeUnit,
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                          ");
            WriteLiteral(@"  };
                        },
                        cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE UNIT ******************************************//


      //--***************************************START DROPDOWN SERVER SIDE SISTEM******************************************//
    function DropdownMasterSistemServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownSistem = $(""#");
            WriteLiteral("\" + elementId).select2({\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(24638, 41, false);
#line 543 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSistem", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(24679, 1889, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }
    function DropdownMasterSistemModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownSistem = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(26569, 41, false);
#line 583 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSistem", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(26610, 2104, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE SISTEM ******************************************//


      //--***************************************START DROPDOWN SERVER SIDE KATEGORI PROJECT******************************************//
    function DropdownKategoriProjectServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownKategoriProject = $(""#"" + elementId).select2({
   ");
            WriteLiteral("                 ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(28715, 50, false);
#line 627 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKategoriProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(28765, 1902, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }
     function DropdownKategoriProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownKategoriProject = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(30668, 50, false);
#line 667 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKategoriProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(30718, 2134, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE KATEGORI PROJECT ******************************************//

      //--***************************************START DROPDOWN SERVER SIDE SUB KATEGORI PROJECT******************************************//
    function DropdownSubKategoriProjectServerSide(elementId, jumlahRowPerPage, isMultiple, kategoriProjectId) {
        var dropdownSubKategori = $(""");
            WriteLiteral("#\" + elementId).select2({\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(32853, 53, false);
#line 710 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSubKategoriProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(32906, 1994, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                KategoriProjectId : kategoriProjectId,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
       ");
            WriteLiteral(@"                     };
                        },
                        cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

     function DropdownSubKategoriProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple, kategoriProjectId) {
        var dropdownSubKategori = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(34901, 53, false);
#line 752 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSubKategoriProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(34954, 2182, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                KategoriProjectId : kategoriProjectId,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
       ");
            WriteLiteral(@"                     };
                        },
                        cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE SUB KATEGORI PROJECT ******************************************//

       //--***************************************START DROPDOWN SERVER SIDE KOMPLEKSITAS PROJECT******************************************//
    function DropdownKompleksitasProjectServerSide(elementId, jumlahRowPe");
            WriteLiteral("rPage, isMultiple) {\r\n        var dropdown = $(\"#\" + elementId).select2({\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(37137, 54, false);
#line 796 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKompleksitasProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(37191, 1892, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    function DropdownKompleksitasProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(39084, 54, false);
#line 837 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKompleksitasProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(39138, 2129, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE KOMPLEKSITAS PROJECT ******************************************//


        //--***************************************START DROPDOWN SERVER SIDE KLASIFIKASI PROJECT******************************************//
    function DropdownKlasifikasiProjectServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownKlasifikasiProject = $(""#"" + ");
            WriteLiteral("elementId).select2({\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(41268, 53, false);
#line 881 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKlasifikasiProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(41321, 2568, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    //Untuk Nominal Angka
    function Nominal(angka) {
        var rev = parseInt(angka, 10).toString().split('').reverse().join('');
        var rev2 = '';
        for (var i = 0; i < rev.length; i++) {
            rev2 += rev[i];
            if ((i + 1) % 3 === 0 && i !== (rev.length - 1)) {
                rev2 += '.';
            }
        }
        if (angka == """" || angka == null) {
            return ""0""
     ");
            WriteLiteral(@"   } else {
            return rev2.split('').reverse().join('');
        }
    }

       //--***************************************START DROPDOWN SERVER SIDE KLASIFIKASI PROJECT******************************************//
    function DropdownKlasifikasiProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownKlasifikasiProject = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(43890, 53, false);
#line 940 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKlasifikasiProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(43943, 2096, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE KLASIFIKASI PROJECT ******************************************//

           //--***************************************START DROPDOWN SERVER SIDE SKO PROJECT******************************************//
    function DropdownSkorProjectServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
           ");
            WriteLiteral("         ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(46040, 46, false);
#line 983 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSkorProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(46086, 1885, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

     function DropdownSkorProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(47972, 46, false);
#line 1024 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSkorProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(48018, 2094, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE SKOR PROJECT ******************************************//

       //--***************************************START DROPDOWN SERVER SIDE TYPE CLIENT******************************************//
    function DropdownTypeClietnServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownTypeClient = $(""#"" + elementId).select2({
             ");
            WriteLiteral("       ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(50113, 45, false);
#line 1067 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataTypeClient", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(50158, 1890, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

     function DropdownTypeClietnModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownTypeClient = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(52049, 45, false);
#line 1108 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataTypeClient", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(52094, 2084, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE TYPE CLIENT ******************************************//


         //--***************************************START DROPDOWN SERVER SIDE CLIENT******************************************//
    function DropdownClientServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownClient = $(""#"" + elementId).select2({
                    aja");
            WriteLiteral("x: {\r\n                        url: \'");
            EndContext();
            BeginContext(54179, 41, false);
#line 1152 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataClient", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(54220, 1881, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    function DropdownClientModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownClient = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(56102, 41, false);
#line 1193 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataClient", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(56143, 2084, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE CLIENT ******************************************//

            //--***************************************START DROPDOWN SERVER SIDE LIST PROJECT******************************************//
    function DropdownAllProjectServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
                    aja");
            WriteLiteral("x: {\r\n                        url: \'");
            EndContext();
            BeginContext(58228, 42, false);
#line 1236 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(58270, 1879, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    function DropdownAllProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(60150, 42, false);
#line 1277 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(60192, 2114, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE LIST PROJECT ******************************************//

          //--***************************************START DROPDOWN SERVER SIDE TYPE DOKUMEN******************************************//
    function DropdownKlasifikasiProjectServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownKlasifikasiProject = $(""#"" + elementId).sele");
            WriteLiteral("ct2({\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(62307, 53, false);
#line 1320 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKlasifikasiProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(62360, 1909, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    function DropdownKlasifikasiProjectModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdownKlasifikasiProject = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(64270, 53, false);
#line 1361 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataKlasifikasiProject", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(64323, 2097, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE TYPE DOKUMEN ******************************************//


             //--***************************************START DROPDOWN SERVER SIDE JOB POSITION*****************************************//
    function DropdownDataJobPositionServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
          ");
            WriteLiteral("          ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(66421, 46, false);
#line 1405 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataJobPosition", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(66467, 2162, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE JOB POSITION ******************************************//

              //--***************************************START DROPDOWN SERVER SIDE JOB POSITION*****************************************//
    function DropdownDataJobPositionServerSideModal(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
      ");
            WriteLiteral("      dropdownParent: $(\'#ModalForm .modal-content\'),\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(68630, 46, false);
#line 1449 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataJobPosition", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(68676, 2097, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE JOB POSITION ******************************************//


            //--***************************************START DROPDOWN SERVER SIDE PROJECT STATUS******************************************//
    function DropdownProjectStatusServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
          ");
            WriteLiteral("          ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(70774, 45, false);
#line 1493 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetDataProjectStatus", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(70819, 1886, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    function DropdownProjectStatusModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
            dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(72706, 45, false);
#line 1534 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetDataProjectStatus", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(72751, 2093, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }


    //--***************************************END DROPDOWN SERVER SIDE PROJECT STATUS ******************************************//

             //--***************************************START DROPDOWN SERVER SIDE PEGAWAI*****************************************//
    function DropdownDataAllPegawaiServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
              ");
            WriteLiteral("      ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(74845, 42, false);
#line 1578 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataPegawai", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(74887, 1890, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

     function DropdownDataAllPegawaiModalServerSide(elementId, jumlahRowPerPage, isMultiple) {
         var dropdown = $(""#"" + elementId).select2({
             dropdownParent: $('#ModalForm .modal-content'),
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(76778, 42, false);
#line 1619 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataPegawai", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(76820, 2150, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE PEGAWAI ******************************************//

             //--***************************************START DROPDOWN SERVER SIDE PEGAWAI*****************************************//
    function DropdownDataAllPegawaiServerSideModal(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
            dropdo");
            WriteLiteral("wnParent: $(\'#ModalForm .modal-content\'),\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(78971, 42, false);
#line 1663 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataPegawai", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(79013, 1949, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER SIDE PEGAWAI ******************************************//

    function DropdownDataAllPegawaiServerSide(elementId, jumlahRowPerPage, isMultiple) {
        var dropdown = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(80963, 42, false);
#line 1705 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataPegawai", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(81005, 1962, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                   ");
            WriteLiteral(@"     cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    //--***************************************START DROPDOWN SERVER Data RM Server Side*****************************************//

    function DropdownDataRMServerSide(elementId, jumlahRowPerPage, isMultiple, UnitId) {

          var dropdownMGroup = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(82968, 39, false);
#line 1748 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllRMByUnit", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(83007, 2160, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                  data: function (params) {
                         return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage,
                                UnitId: $(""#UnitId"").val()
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                           ");
            WriteLiteral(@" };
                        },
                        cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }

    //--***************************************END DROPDOWN SERVER Data RM Server Side ******************************************//


    //--***************************************START DROPDOWN SERVER Data RM Server Side*****************************************//

    function DropdownDataWilayahServerSide(elementId, jumlahRowPerPage, isMultiple, UnitId) {

        ");
            WriteLiteral("  var dropdownMGroup = $(\"#\" + elementId).select2({\r\n                    ajax: {\r\n                        url: \'");
            EndContext();
            BeginContext(85168, 48, false);
#line 1795 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataUnitByWilayah", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(85216, 1824, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                  data: function (params) {
                         return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                        cach");
            WriteLiteral(@"e: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    function DropdownDataWilayah2ServerSide(elementId, jumlahRowPerPage, isMultiple, UnitId) {

          var dropdownMGroup = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(87041, 42, false);
#line 1836 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataWilayah", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(87083, 1824, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                  data: function (params) {
                         return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                        cach");
            WriteLiteral(@"e: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    function DropdownDataSRMandRMServerSide(elementId, jumlahRowPerPage, isMultiple, UnitId) {

          var dropdownMGroup = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(88908, 43, false);
#line 1877 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSRMandRM", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(88951, 1812, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                  data: function (params) {
                         return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                        cach");
            WriteLiteral(@"e: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }

    function DropdownDataSegmenServerSide(elementId, jumlahRowPerPage, isMultiple) {
          var dropdownMGroup = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(90764, 41, false);
#line 1917 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataSegmen", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(90805, 1938, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                  data: function (params) {
                         return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                        cach");
            WriteLiteral(@"e: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
    }
    //--***************************************END DROPDOWN SERVER Data RM Server Side ******************************************//


    function DropdownJabatanServerSide(elementId, jumlahRowPerPage, isMultiple) {
          var dropdwon = $(""#"" + elementId).select2({
                    ajax: {
                        url: '");
            EndContext();
            BeginContext(92744, 42, false);
#line 1959 "C:\work\E-Library\E-Library\PortalPMO\Views\Shared\_PartialJavascript.cshtml"
                         Write(Url.Action("GetAllDataJabatan", "Utility"));

#line default
#line hidden
            EndContext();
            BeginContext(92786, 9507, true);
            WriteLiteral(@"',
                        dataType: 'json',
                        delay: 250,
                        multiple: isMultiple,
                        allowClear: true,
                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page || 1,
                                rowPerPage: jumlahRowPerPage,
                            };
                        },
                        processResults: function (data, params) {
                            //debugger
                            params.page = params.page || 1;

                            return {
                                results: data,
                                pagination: {
                                    more: (params.page * jumlahRowPerPage) < data.total_count
                                }
                            };
                        },
                        ");
            WriteLiteral(@"cache: true
                     },
                    placeholder: '-Silahkan pilih-',
                    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                    minimumInputLength: 0
                     //templateResult: formatRepoPegawai
            });
            var select2Instance = $('#' + elementId).data('select2');
            select2Instance.on('results:message', function (params) {
                this.dropdown._resizeDropdown();
                this.dropdown._positionDropdown();
            });
        }



    //--***************************************START CONVERT DATERANGE PICKER******************************************//

    function convertDateRange(value, elementId) {
        var splitDate = value.replace(/\s+/g, """").split(""-"");
        var convertDate1 = splitDate[0].split(""/"");
        var newdate1 = convertDate1[1] + '/' + convertDate1[0] + '/' + convertDate1[2];
        var convertDate2 = splitDate[1].split(""/""");
            WriteLiteral(@");
        var newdate2 = convertDate2[1] + '/' + convertDate2[0] + '/' + convertDate2[2];

        var newdateRange = newdate1 + ' - ' + newdate2
        $('#' + elementId).val(newdateRange)
    }
     //--***************************************END CONVERT DATERANGE PICKER******************************************//

    function getColorRandom() {
        var messages = [""#16a085"", ""#2980b9"", ""#8e44ad"", ""#2c3e50"", ""#e67e22"", ""#c0392b"",""#7f8c8d"" ];
        return messages[Math.floor(Math.random() * messages.length)];
    }

    function GetTwoFirstCharFromWord(value) {
        var abbr = """";
        value = value.split(' ');
        if (value.length < 2) {
            return value[0].substr(0, 1).toUpperCase();
        }
        else {
            for (i = 0; i < 2; i++) {
                abbr += value[i].substr(0, 1);
            }
        }
        return abbr;
    }


    //function
    function generateDatatable(elementId)
    {
        $('#'+elementId).DataTable({

     ");
            WriteLiteral(@"   });
    }

    function CreateContentTanggaDefaultValuel(elementId) {
        var value = $('#' + elementId).val();
        $('#' + elementId).datepicker({

            // inline mode
            inline: false,

            // language
            language: 'en',

            // start date
            startDate: new Date(),

            // array of day's indexes
            weekends: [6, 0],

            // custom date format
            dateFormat: 'dd/mm/yyyy',

            // Alternative text input. Use altFieldDateFormat for date formatting.
            altField: '',

            // remove selection when clicking on selected cell
            toggleSelected: true,

            // keyboard navigation
            keyboardNav: true,

            // position
            position: 'bottom left',
            offset: 12,

            // days, months or years
            view: 'days',
            minView: 'days',

            showOtherMonths: true,
            selectOther");
            WriteLiteral(@"Months: true,
            moveToOtherMonthsOnSelect: true,

            showOtherYears: true,
            selectOtherYears: true,
            moveToOtherYearsOnSelect: true,

            minDate: '',
            maxDate: '',
            disableNavWhenOutOfRange: true,

            multipleDates: false, // Boolean or Number
            multipleDatesSeparator: ',',
            range: false,

            // display today button
            todayButton: false,

            // display clear button
            clearButton: true,

            // Event type
            showEvent: 'focus',

            // auto close after date selection
            autoClose: true,

            // navigation
            monthsFiled: 'monthsShort',
            prevHtml: '<svg><path d=""M 17,12 l -5,5 l 5,5""></path></svg>',
            nextHtml: '<svg><path d=""M 14,12 l 5,5 l -5,5""></path></svg>',
            navTitles: {
                days: 'MM, <i>yyyy</i>',
                months: 'yyyy',
          ");
            WriteLiteral(@"      years: 'yyyy1 - yyyy2'
            },

            // timepicker
            timepicker: false,
            onlyTimepicker: false,
            dateTimeSeparator: ' ',
            timeFormat: '',
            minHours: 0,
            maxHours: 24,
            minMinutes: 0,
            maxMinutes: 59,
            hoursStep: 1,
            minutesStep: 1,

            // callback events
            onSelect: '',
            onShow: '',
            onHide: '',
            onChangeMonth: '',
            onChangeYear: '',
            onChangeDecade: '',
            onChangeView: '',
            onRenderCell: ''

        })
        $('#' + elementId).val(value);
    }



    function CreateContentTanggal(elementId)
    {
        $('#' + elementId).datepicker({

            // inline mode
            inline: false,

            // language
            language: 'en',

            // start date
            startDate: new Date(),

            // array of day's indexes
");
            WriteLiteral(@"            weekends: [6, 0],

            // custom date format
            dateFormat: 'dd/mm/yyyy',

            // Alternative text input. Use altFieldDateFormat for date formatting.
            altField: '',

            // remove selection when clicking on selected cell
            toggleSelected: true,

            // keyboard navigation
            keyboardNav: true,

            // position
            position: 'bottom left',
            offset: 12,

            // days, months or years
            view: 'days',
            minView: 'days',

            showOtherMonths: true,
            selectOtherMonths: true,
            moveToOtherMonthsOnSelect: true,

            showOtherYears: true,
            selectOtherYears: true,
            moveToOtherYearsOnSelect: true,

            minDate: '',
            maxDate: '',
            disableNavWhenOutOfRange: true,

            multipleDates: false, // Boolean or Number
            multipleDatesSeparator: ',',
      ");
            WriteLiteral(@"      range: false,

            // display today button
            todayButton: false,

            // display clear button
            clearButton: true,

            // Event type
            showEvent: 'focus',

            // auto close after date selection
            autoClose: true,

            // navigation
            monthsFiled: 'monthsShort',
            prevHtml: '<svg><path d=""M 17,12 l -5,5 l 5,5""></path></svg>',
            nextHtml: '<svg><path d=""M 14,12 l 5,5 l -5,5""></path></svg>',
            navTitles: {
                days: 'MM, <i>yyyy</i>',
                months: 'yyyy',
                years: 'yyyy1 - yyyy2'
            },

            // timepicker
            timepicker: false,
            onlyTimepicker: false,
            dateTimeSeparator: ' ',
            timeFormat: '',
            minHours: 0,
            maxHours: 24,
            minMinutes: 0,
            maxMinutes: 59,
            hoursStep: 1,
            minutesStep: 1,

        ");
            WriteLiteral(@"    // callback events
            onSelect: '',
            onShow: '',
            onHide: '',
            onChangeMonth: '',
            onChangeYear: '',
            onChangeDecade: '',
            onChangeView: '',
            onRenderCell: ''

        })
    }

    function CreateContentTanggalMonthYear(elementId) {
        $('#' + elementId).datepicker({

            // inline mode
            inline: false,

            // additional CSS class
            classes: '',

            // language
            language: 'en',

            // start date
            //startDate: new Date(),

            // custom date format
            dateFormat: 'M yyyy',

            // remove selection when clicking on selected cell
            toggleSelected: true,

            // keyboard navigation
            keyboardNav: true,

            // position
            position: 'bottom left',
            offset: 12,

            // days, months or years
            view: 'years',");
            WriteLiteral(@"
            minView: 'months',

            // display today button
            todayButton: false,

            // display clear button
            clearButton: true,

            // auto close after date selection
            autoClose: true,

        })
    }

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
