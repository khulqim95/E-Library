#pragma checksum "C:\work\E-Library\E-Library\PortalPMO\Views\Dashboard\_Script.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d2e0db456b990be2523ca30997ecec3c5aa41b03"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard__Script), @"mvc.1.0.view", @"/Views/Dashboard/_Script.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/_Script.cshtml", typeof(AspNetCore.Views_Dashboard__Script))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO;

#line default
#line hidden
#line 2 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d2e0db456b990be2523ca30997ecec3c5aa41b03", @"/Views/Dashboard/_Script.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ba151424cb7e4ff7d935c55cfcaa12c04b783fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard__Script : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 24843, true);
            WriteLiteral(@"<script type=""text/javascript"">
    var State = '';
    var TableUpcomingProject;
    var TableOverdueProject;
    var TableTopProject;
  
    $(document).ready(function () {
        RangeDateDefault(""PeriodeParamSearch"");
        DropdownUnitServerSide(""UnitIdSearchParam"", 100, false);
        var UnitIDLogin = $('#UnitIDLogin').val();
        var UnitNameLogin = $('#UnitNameLogin').val();

        $('#UnitIdSearchParam').append('<option value=""' + UnitIDLogin + '"" selected>' + UnitNameLogin + '</option>');
        LoadDataDashboard();
        //GetSummaryDashboard();
        //GetListAllDashboardTotal();
        //GetListAllProjectStatus();
        //LoadTableTopProject();
        //LoadTableUpcomingProject();
        //LoadTableOverdueProject();
        //new CircularProgressBar('pie');
        //GetListDataWorkload();
        //GetListDataTopUser()
        //createPieChart();

    });

    function LoadDataDashboard() {
        GetSummaryDashboard();
        GetListAllDashboar");
            WriteLiteral(@"dTotal();
        GetListAllProjectStatus();
        LoadTableTopProject();
        //$('#TableTopProject').DataTable().ajax.reload()
        LoadTableUpcomingProject();
        LoadTableOverdueProject();
        new CircularProgressBar('pie');
        GetListDataWorkload();
        GetListDataTopUser()
        //createPieChart();  
    }



    function createPieChart() {
        var chart = new CanvasJS.Chart(""chartContainer"", {
            exportEnabled: true,
            animationEnabled: true,
            title: {
                text: ""State Operating Funds""
            },
            legend: {
                cursor: ""pointer"",
                itemclick: explodePie
            },
            data: [{
                type: ""pie"",
                showInLegend: true,
                toolTipContent: ""{name} ++ {jumlah}: <strong>{y}%</strong>"",
                indexLabel: ""{name} - {y}%"",
                dataPoints: [
                    { y: 26, name: ""School Aid"", exploded: ");
            WriteLiteral(@"true,jumlah : 11111111 },
                    { y: 20, name: ""Medical Aid"" },
                    { y: 5, name: ""Debt/Capital"" },
                    { y: 3, name: ""Elected Officials"" },
                    { y: 7, name: ""University"" },
                    { y: 17, name: ""Executive"" },
                    { y: 22, name: ""Other Local Assistance"" }
                ]
            }]
        });
        chart.render();
    }

function explodePie (e) {
	if(typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === ""undefined"" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
		e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
	} else {
		e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
	}
	e.chart.render();

    }

    function ChartColumn(elementId,label,dataArray) {

        var chart = new CanvasJS.Chart(elementId, {
            animationEnabled: true,
            theme: ""light2"", // ""light1"", ""light2"", ""dark1"", ""dark2""
            title: {
          ");
            WriteLiteral(@"      text: label
            },
            axisY: {
                title: ""Dalam (%)""
            },
            data: [{
                type: ""column"",
                showInLegend: false,
                toolTipContent: ""Nama : {label} <br/> Total Project : {jumlah} <br/> Presentase : <strong>{y}%</strong>"",
                dataPoints: dataArray
                //dataPoints: [
                //    { y: 90, label: ""Developer 1"",jumlah : 123124 },
                //    { y: 80, label: ""Developer 2"" },
                //    { y: 70, label: ""Developer 3"" },
                //    { y: 60, label: ""Developer 4"" },
                //    { y: 50, label: ""Developer 5"" }
                //]
            }]
        });
        chart.render();

    }

    function LoadTableUpcomingProject() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        var Periode = $(""#PeriodeParamSearch"").val();
        if (TableUpcomingProject != undefined) {
            TableUpcomingProject.destr");
            WriteLiteral(@"oy();
        }
        TableUpcomingProject = $('#TableUpcomingProject').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            orderCellsTop: true,
            ""scrollY"": ""270px"",
            ""scrollCollapse"": true,
            responsive: true,
            processing: true, // untuk menampilkan bar prosessing
            serverSide: true, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            retrieve: true,
            destroy: true,
            //autoWidth: true,
            dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
            //data: dataUpcomingProject,
            ajax: {
                ""url"": '../Dashboard/LoadDataTableProject',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": { ""TypeTable"": ""1"", ""UnitId"": UnitID, ""Periode"": Pe");
            WriteLiteral(@"riode },
                error: function (jqXHR, textStatus, errorThrown) {
                    //window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
     ");
            WriteLiteral(@"           {
                    responsivePriority: 2,
                    ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<a href=""javascript:void(0)"" class=""btn btn-facebook"" id=""button-edit"" onclick=""DetailProject(' + full.ProjectId + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Detail Project""><i class=""fa fa-edit btnEdit""></i></a>'
                    }
                },
                { responsivePriority: 5, ""data"": ""ProjectNo"", ""name"": ""ProjectNo"" },
                { responsivePriority: 4, ""data"": ""NamaProject"", ""name"": ""NamaProject"" },
                { responsivePriority: 8, ""data"": ""TanggalProject"", ""name"": ""TanggalProject"" },
                {
                    responsivePriority: 2, ""data"": ""Selisih"", ""name"": ""Selisih"", ""className"": ""text-center"",
                    ""render"": function (data, type, full, meta) {
                        if (full.Warna == 'Kuning') {
     ");
            WriteLiteral(@"                       return '<p class=""mt-2 btn btn-block btn-warning disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Biru') {
                            return '<p class=""mt-2 btn btn-block btn-info disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Hijau') {
                            return '<p class=""mt-2 btn btn-block btn-success disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Merah') {
                            return '<p class=""mt-2 btn btn-block btn-danger disabled""><b>' + data + '</b></p>'
                        }
                        else {
                            return '<p class=""mt-2 btn btn-block disabled""><b>' + data + '</b></p>'
                        }
                    }
                   
                }
            ],
            ""order"": [[1, ""desc""]]
        });
    }

");
            WriteLiteral(@"    function LoadTableOverdueProject() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        var Periode =  $(""#PeriodeParamSearch"").val()
        if (TableOverdueProject != undefined) {
            TableOverdueProject.destroy();
        }
        TableOverdueProject = $('#TableOverdueProject').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            orderCellsTop: true,
            ""scrollY"": ""270px"",
            ""scrollCollapse"": true,
            responsive: true,
            processing: true, // untuk menampilkan bar prosessing
            serverSide: true, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            retrieve: true,
            destroy: true,
            //autoWidth: true,
            dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
            ajax: {
       ");
            WriteLiteral(@"         ""url"": '../Dashboard/LoadDataTableProject',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": { ""TypeTable"": ""2"", ""UnitId"": UnitID, ""Periode"": Periode },
                error: function (jqXHR, textStatus, errorThrown) {
                    //window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sam");
            WriteLiteral(@"pai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
                { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                {
                    responsivePriority: 2,
                    ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""DetailProject(' + full.ProjectId + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Detail Project""><i class=""fa fa-edit btnEdit""></i></a></div>'
                    }
                },
                { responsivePriority: 5, ""data"": ""ProjectNo"", ""name"": ""ProjectNo"" },
                { responsivePriority: 4, ""data"": ""NamaProject"", ""name"": ""NamaProject"" },
                { responsivePriority: 8, ""data"": ""TanggalProject"", ""name"": ""TanggalProject"" },
                {");
            WriteLiteral(@"
                    responsivePriority: 2, ""data"": ""Selisih"", ""name"": ""Selisih"",
                    ""render"": function (data, type, full, meta) {
                        if (data >= 0 && data < 4) {
                            return '<p class=""mt-2 btn btn-warning disabled""><b>' + data + ' Hari </b></p>'
                        }
                        else if (data > 4) {
                            return '<p class=""mt-2 btn btn-info disabled""><b>' + data + ' Hari </b></p>'
                        }
                        else {
                            return '<p class=""mt-2 btn btn-danger disabled""><b>' + data + ' Hari </b></p>'
                        }
                    }
                }
            ],
            ""order"": [[1, ""desc""]]
        });
    }
    function LoadTableTopProject() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        var Periode = $(""#PeriodeParamSearch"").val()
        if (TableTopProject != undefined) {
            TableTopProject");
            WriteLiteral(@".destroy();
        }
        TableTopProject = $('#TableTopProject').DataTable({
            fixedHeader: {
                header: true
            },
            pageLength: 10,
            destroy: true,
            orderCellsTop: true,
            responsive: false,
            scrollX: true,
            processing: true, // untuk menampilkan bar prosessing
            serverSide: true, // untuk proses server side datatable harus diset true
            orderMulti: false, // untuk disable multi order column
            retrieve: true,
            //autoWidth: true,
            dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
            //data: dataUpcomingProject,
            ajax: {
                ""url"": '../Dashboard/LoadDataTableTOPProject',
                ""type"": ""POST"",
                ""datatype"": ""json"",
                //""data"": { ""UnitId"": UnitID, ""Periode"": Periode },
                ""data"": function (d) {
                    d.UnitId = UnitI");
            WriteLiteral(@"D;
                    d.Periode = Periode;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                }
            },
            destroy: true,
            language: {
                processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                paginate: {
                    first: ""Halaman Awal"",
                    last: ""Halaman Akhir"",
                    previous: ""Halaman Sebelumnya"",
                    next: ""Halaman Selanjutnya"",
                },
                lengthMenu: ""Menampilkan _MENU_ Data"",
                emptyTable: ""Data tidak ditemukan"",
                infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                zeroRecords: ""Data tidak ditemukan""
            },
            columns: [
 ");
            WriteLiteral(@"               { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                {
                    responsivePriority: 2,
                    ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                        return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""DetailProject(' + full.ProjectId + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a></div>'
                    }
                },
                {
                    responsivePriority: 3, ""data"": ""CloseOpen"", ""name"": ""CloseOpen"",
                    ""render"": function (data, type, full, meta) {
                        if (full.Warna == 'Kuning') {
                            return '<p class=""mt-2 btn btn-block btn-warning disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna");
            WriteLiteral(@" == 'Biru') {
                            return '<p class=""mt-2 btn btn-block btn-info disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Hijau') {
                            return '<p class=""mt-2 btn btn-block btn-success disabled""><b>' + data + '</b></p>'
                        }
                        else if (full.Warna == 'Merah') {
                            return '<p class=""mt-2 btn btn-block btn-danger disabled""><b>' + data + '</b></p>'
                        }
                        else {
                            return '<p class=""mt-2 btn btn-block disabled""><b>' + data + '</b></p>'
                        }
                    }
                },
                { responsivePriority: 3, ""data"": ""ProjectNo"", ""name"": ""ProjectNo"" },
                { responsivePriority: 4, ""data"": ""NamaProject"", ""name"": ""NamaProject"" },
                { responsivePriority: 5, ""data"": ""TanggalProject"", ""name"": ""TanggalProject"" },
");
            WriteLiteral(@"                {
                    responsivePriority: 6, ""data"": ""Selisih"", ""name"": ""Selisih"", ""className"": ""text-center""
                    //""render"": function (data, type, full, meta) {
                    //    return '<center><p><b>' + data + ' </b></p></center>'
                    //}
                    //""render"": function (data, type, full, meta) {
                    //    if (data >= 0 && data < 4) {
                    //        return '<p class=""mt-2 btn btn-warning disabled""><b>' + data + ' Hari </b></p>'
                    //    }
                    //    else if (data > 4) {
                    //        return '<p class=""mt-2 btn btn-info disabled""><b>' + data + ' Hari </b></p>'
                    //    }
                    //    else {
                    //        return '<p class=""mt-2 btn btn-danger disabled""><b>' + data + ' Hari </b></p>'
                    //    }
                    //}
                },
                { responsivePriority: 8, ""data"": ""Pro");
            WriteLiteral(@"jectStatus"", ""name"": ""ProjectStatus"" },
                { responsivePriority: 8, ""data"": ""TanggalPenyelesaian"", ""name"": ""TanggalPenyelesaian"" },
                {
                    responsivePriority: 8, ""data"": ""JumlahHariPengerjaan"", ""name"": ""JumlahHariPengerjaan"", ""className"": ""text-center""
                    //""render"": function (data, type, full, meta) {
                    //    if (data == null) {
                    //        return ''
                    //    }
                    //    else {
                    //        return '<center><p><b>' + data + ' </b></p></center>'
                    //    }
                    //}
                },
                { responsivePriority: 7, ""data"": ""NamaUnit"", ""name"": ""NamaUnit"" }
                
            ],
            ""order"": [[1, ""desc""]]
        });
    }

    function GetListAllDashboardTotal() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        $.ajax({
            type: 'GET',
            url: '../L");
            WriteLiteral(@"ogin/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    $.ajax({
                        url: ""../Dashboard/GetAllTotalProject"",
                        type: 'POST',
                        data: { ""UnitIdSearch"": UnitID, ""Periode"": $(""#PeriodeParamSearch"").val() },
                        success: function (d) {
                            console.log(d)
                            if (d != null) {
                                $('#ListTotalProject').html("""");
                                $.each(d, function (index, value) {
                                    $('#ListTotalProject').append('<div class=""col-md-6 col-xl-4"">'+
                                        '<div class=""card mb-3 widget-content"">'+
                                            '<div class=""widget-content-wrapper"">'+
                                                '<div class=""widget-content-left"">'+
                                                    '<div cl");
            WriteLiteral(@"ass=""widget-heading"">'+value.Status+'</div>'+
                                                    '<div class=""widget-subheading"">'+value.Keterangan+'</div>'+
                                                '</div>'+
                                                '<div class=""widget-content-right"">'+
                                                    '<div class=""widget-numbers""><span>'+value.Jumlah+'</span></div>'+
                                                '</div>'+
                                            '</div>'+
                                        '</div>'+
                                    '</div>');
                                });
                            }
                            else {
                                $('#ListTotalProject').html("""");
                            }
                        }
                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
");
            WriteLiteral(@"            }
        });
    }

    function GetListAllProjectStatus() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        var Search = { ""UnitIdSearch"": UnitID, ""Periode"": $(""#PeriodeParamSearch"").val() }
        UrlPartialView = '../Dashboard/GetAllProjectStatus';
        LoadPartialViewData(UrlPartialView, function (data) {
            $('#DivContentBody').hide();
            document.getElementById(""ListProjectStatusElement"").innerHTML = data;
            new CircularProgressBar('pie');
        }, Search);
    }

    function GetListDataWorkload() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        var Periode = $(""#PeriodeParamSearch"").val();

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    $.ajax({
                        url: ""../Dashboard/GetAllWorkLoad"",
                        type: 'POST',
                   ");
            WriteLiteral(@"     data: { ""UnitIdSearch"": UnitID, ""Periode"": Periode },
                        success: function (d) {
                            if (d != null) {
                                ChartColumn('chartColumn', 'Workload', d);
                            }
                            else {
                                ChartColumn('chartColumn', 'Workload', d);
                            }
                        }
                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function GetListDataTopUser() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        var Periode = $(""#PeriodeParamSearch"").val();


        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    $.ajax({
                        url: ""../Dashboard/GetAll");
            WriteLiteral(@"TopUser"",
                        type: 'POST',
                        data: { ""UnitIdSearch"": UnitID, ""Periode"": Periode },
                        success: function (d) {
                            console.log(d)
                            if (d != null) {
                                ChartColumn('chartColumn2', 'Top 5 User', d);
                            }
                            else {
                                ChartColumn('chartColumn2', 'Top 5 User', d);
                            }
                        }
                    });
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function GetSummaryDashboard() {
        var UnitID = $(""#UnitIdSearchParam"").val().join();
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                  ");
            WriteLiteral(@"  $.ajax({
                        url: ""../Dashboard/GetSummaryProject"",
                        type: 'POST',
                        data: { ""UnitIdSearch"": UnitID, ""Periode"": $(""#PeriodeParamSearch"").val() },
                        success: function (d) {
                            console.log(d)
                            if (d != null) {
                                $(""#txtProjectClosed"").text(d.PresentaseProjectClose + ""%"");
                                $(""#txtOverdueProject"").text(d.PresentaseOverdueProject + ""%"");
                                $(""#txtUpcomingProject"").text(d.PresentaseUpcomingProject + ""%"");
                            }
                            else {
                                $(""#txtProjectClosed"").text(""-"");
                                $(""#txtOverdueProject"").text(""-"");
                                $(""#txtUpcomingProject"").text(""-"");
                            }
                        }
                    });
                }
     ");
            WriteLiteral(@"           else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function DetailProject(Id) {
        window.open('../DetailProject/View?ProjectId=' + Id, '_blank');
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
