#pragma checksum "C:\work\E-Library\E-Library\PortalPMO\Views\Profile\_Script.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5d119c015875d1f5acc0df2d3334fcb4b4acf866"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Profile__Script), @"mvc.1.0.view", @"/Views/Profile/_Script.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Profile/_Script.cshtml", typeof(AspNetCore.Views_Profile__Script))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO;

#line default
#line hidden
#line 2 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d119c015875d1f5acc0df2d3334fcb4b4acf866", @"/Views/Profile/_Script.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ba151424cb7e4ff7d935c55cfcaa12c04b783fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Profile__Script : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 12252, true);
            WriteLiteral(@"<script type=""text/javascript"">
    var State = '';
   
    $(document).ready(function () {
        $.fn.datepicker.language['en'] = {
            days: ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'],
            daysShort: ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab'],
            daysMin: ['Mn', 'Sn', 'Sl', 'Rb', 'Km', 'Jm', 'Sa'],
            months: ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],
            today: 'Today',
            clear: 'Clear',
            dateFormat: 'dd/mm/yyyy',
            firstDay: 0
        };

        ValidationForm();
        ValidationFormUbahPassword();
        ValidationUpload();
        
        $(""input[name=IsActive][value=True]"").prop(""checked"", true);


        CreateContentTanggal(""TanggalMemo"");
        CreateContentTanggal(""TanggalKl");
            WriteLiteral(@"arifikasi"");
        CreateContentTanggal(""TanggalDisposisi"");
        $('#Keterangan').summernote({
            placeholder: 'Masukkan Diskripsi Project',
            tabsize: 2,
            height: 300,
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'underline', 'clear']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['table']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ]
        });
    });

    function ClearFormUbahPassword() {
        document.getElementById(""FormUbahPassword"").reset();
    }

    //Untuk Validasi Form data Pinjaman
    function ValidationForm() {
        //Untuk validasi form
        var $validator = $(""#FormData"").validate({
            ignore: [],
            rules: {
                Nama: {
                    required: true
                },
   ");
            WriteLiteral(@"             OrderBy: {
                    required: true
                },
                Visible: {
                    required: true
                },
            },
            messages: {

            },

            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.pa");
            WriteLiteral(@"rent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah valid atau belum
        $('#BtnSubmit').click(function () {
            var url = '';
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                url = '../Profile/SubmitEdit';
                //Cek session terlebih dahulu
                $.ajax({
                    type: 'GET',
                    url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
               ");
            WriteLiteral(@"             $.ajax({
                                url: url,
                                type: 'POST',
                                data: $('#FormData').serialize(),
                                success: function (d) {
                                    //Tampilkan alert status
                                    if (d == """") {
                                        NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                        }
                        else {
                            window.location.href = ""../Login/Login?a=true"";
                        }
                    }
                });
            }
        });
    }



    function ValidationFormUbahPassword() {
        //Untuk validasi form
        var $validator = $(""#Fo");
            WriteLiteral(@"rmUbahPassword"").validate({
            ignore: [],
            rules: {
                PasswordLama: {
                    required: true
                },
                PasswordBaru: {
                    required: true
                },
                ConfirmPasswordBaru: {
                    required: true
                },
            },
            messages: {

            },

            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(ele");
            WriteLiteral(@"ment.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah valid atau belum
        $('#BtnSubmitUbahPassword').click(function () {
            var url = '';
            var $valid = $(""#FormUbahPassword"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                url = '../Profile/SubmitUbahPassword';
                //Cek session terlebih dahulu
      ");
            WriteLiteral(@"          $.ajax({
                    type: 'GET',
                    url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
                            $.ajax({
                                url: url,
                                type: 'POST',
                                data: $('#FormUbahPassword').serialize(),
                                success: function (d) {
                                    //Tampilkan alert status
                                    if (d == """") {
                                        NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                        }
                        else {
                            window.location.href = ""../Login/Login?a=true"";");
            WriteLiteral(@"
                        }
                    }
                });
            }
        });
    }

    function ValidationUpload() {
        //Untuk validasi form
        var $validator = $(""#FormDataUploadFoto"").validate({
            ignore: [],
            rules: {
                file: {
                    required: true
                }
            },
            messages: {

            },

            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.");
            WriteLiteral(@"insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            }
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah valid atau belum
        $('#BtnSubmitUploadFoto').click(function () {
            var url = '';
            var $valid = $(""#FormDataUploadFoto"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                url = '../Profile/SubmitUploadFoto';
                //Cek session terlebih d");
            WriteLiteral(@"ahulu
                $.ajax({
                    type: 'POST',
                    url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
                            var fd = $(""#FormDataUploadFoto"")[0];
                            $.ajax({
                                url: url,
                                data: new FormData(fd),
                                mimeType: ""multipart/form-data"",
                                processData: false,
                                contentType: false,
                                type: ""POST"",
                                success: function (d) {
                                    //Tampilkan alert status
                                    if (d == """") {
                                        NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                        $.ajax({
                                            url: ""../Profile/GetInfoUse");
            WriteLiteral(@"r"",
                                            type: 'GET',
                                            success: function (d) {
                                                //Tampilkan alert status
                                                document.getElementById(""ImagesHeaderMenu"").src = d.Images;
                                                document.getElementById(""PhotoViewEdit"").src = d.Images;
                                            }
                                        });
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                        }
                        else {
                            window.location.href = ""../Login/Login?a=true"";
                        }
                    }
                });
            }
        });
    }

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
