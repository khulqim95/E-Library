#pragma checksum "C:\work\E-Library\E-Library\PortalPMO\Views\Monitoring\_Script.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1743751e6c33bec80f73a23f80d44a96576f8d76"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Monitoring__Script), @"mvc.1.0.view", @"/Views/Monitoring/_Script.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Monitoring/_Script.cshtml", typeof(AspNetCore.Views_Monitoring__Script))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO;

#line default
#line hidden
#line 2 "C:\work\E-Library\E-Library\PortalPMO\Views\_ViewImports.cshtml"
using PortalPMO.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1743751e6c33bec80f73a23f80d44a96576f8d76", @"/Views/Monitoring/_Script.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ba151424cb7e4ff7d935c55cfcaa12c04b783fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Monitoring__Script : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 5885, true);
            WriteLiteral(@"<script type=""text/javascript"">var State = '';
    var TableFasilitasKredit;
    var TableChecking;
    var TableDisclaimer;
    var TableRiwayatKomentar;
    var Table;
    var TableFile;
    var TableTracking;
    $(document).ready(function () {
        LoadDataTable();
    });

    function LoadDataTable(data) {
        if (Table != undefined) {
            Table.DataTable.destroy();
        }

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    Table = $('#Table').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        server");
            WriteLiteral(@"Side: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
                        ajax: {
                            ""url"": '../Monitoring/LoadData',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan ");
            WriteLiteral(@"_START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            {
                                responsivePriority: 2,
                                ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
       ");
            WriteLiteral(@"                             /********************************************************************************************************************************************************************************************************************************************************************************************************************************/
                                    return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-view"" onclick=View(""' + full.LeadsId + '"",""' + full.KategoriLeadsId + '"",""' + full.ProspekId + '"",""' + full.Id + '"",""' + full.NoPengajuan + '"")  data-toggle=""tooltip"" title=""View Data""><i class=""fa fa-eye btnView""></i></a>'
                                }
                            },
                            { responsivePriority: 3, ""data"": ""NamaRM"", ""name"": ""NamaRM"" },
                            { responsivePriority: 4, ""data"": ""UnitPengusul"", ""name"": ""UnitPengusul"" },
                            { responsiveP");
            WriteLiteral(@"riority: 5, ""data"": ""NamaDebitur"", ""name"": ""NamaDebitur"" },
                            { responsivePriority: 6, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" }
                        ],
                        ""order"": [[1, ""desc""]]
                    });

                    //$.fn.dataTable.ext.errMode = 'throw';

                    //--------------------------Function untuk melempar parameter search ---------------------//
                    //Untuk melempar parameter search
                    //oTable = $('#Table').DataTable();
                    $('#BtnSearch').click(function () {
                        Table.columns(2).search($('#txtNamaSearchParam').val().trim());
                        Table.columns(3).search($('#txtKeteranganSearchParam').val().trim());


                        //hit search ke server
                        Table.draw();
                    });


                    //---------------------Function untuk reset data pencarian----------------//
     ");
            WriteLiteral(@"               $('#BtnClearSearch').click(function () {
                        $('#txtNamaSearchParam').val("""");
                        $('#txtKeteranganSearchParam').val("""");

                        Table.columns(2).search($('#txtNamaSearchParam').val().trim());
                        Table.columns(3).search($('#txtKeteranganSearchParam').val().trim());
                        //hit search ke server
                        Table.draw();
                    });

                    Table.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function LoadDataTableFasilitasKredit(data) {
");
            EndContext();
            BeginContext(6005, 5201, true);
            WriteLiteral(@"        debugger;
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableFasilitasKredit = $('#TableFasilitasKredit').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: da");
            WriteLiteral(@"ta,
                        ajax: {
                            ""url"": '../Monitoring/LoadDataTableFasilitasKredit',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": data },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next");
            WriteLiteral(@": ""Halaman Selanjutnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            {
                                responsivePriority: 2,
                                ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                                    return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""Edit(' + full.Id + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Ubah Data""><i class=""fa fa-edit btnEdit""></i></a>'
                ");
            WriteLiteral(@"                        + '</div>'
                                }
                            },
                            { responsivePriority: 3, ""data"": ""JenisFasilitas"", ""name"": ""JenisFasilitas"" },
                            { responsivePriority: 4, ""data"": ""Valuta"", ""name"": ""Valuta"" },
                            { responsivePriority: 5, ""data"": ""MaksimumKredit"", ""name"": ""MaksimumKredit"" },
                            { responsivePriority: 6, ""data"": ""Tujuan"", ""name"": ""Tujuan"" }
                        ],
                        ""order"": [[1, ""desc""]]
                    });

                    //$.fn.dataTable.ext.errMode = 'throw';

                    //--------------------------Function untuk melempar parameter search ---------------------//
                    //Untuk melempar parameter search
                    //oTable = $('#Table').DataTable();
                    $('#BtnSearch').click(function () {
                        Table.columns(2).search($('#txtNamaSearchParam').");
            WriteLiteral(@"val().trim());
                        Table.columns(3).search($('#txtKeteranganSearchParam').val().trim());


                        //hit search ke server
                        Table.draw();
                    });


                    //---------------------Function untuk reset data pencarian----------------//
                    $('#BtnClearSearch').click(function () {
                        $('#txtNamaSearchParam').val("""");
                        $('#txtKeteranganSearchParam').val("""");

                        Table.columns(2).search($('#txtNamaSearchParam').val().trim());
                        Table.columns(3).search($('#txtKeteranganSearchParam').val().trim());
                        //hit search ke server
                        Table.draw();
                    });

                    TableFasilitasKredit.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }");
            WriteLiteral("\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    function LoadDataTableFile(data) {\r\n");
            EndContext();
            BeginContext(11304, 4830, true);
            WriteLiteral(@"        debugger;
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableFasilitasKredit = $('#TableFile').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
      ");
            WriteLiteral(@"                  ajax: {
                            ""url"": '../Monitoring/LoadDataTableFile',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": data },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutnya");
            WriteLiteral(@""",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            { responsivePriority: 2, ""data"": ""FileName"", ""name"": ""FileName"" },
                            {
                                responsivePriority: 3, ""data"": ""DownloadPath"", ""name"": ""DownloadPath"",
                                ""render"": function (data, type, full, meta) {
                                    return '<div class=""btn-group""><a href=""' + data + '"" class=""btn btn-small btn-facebook"" id=""button-download"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""Download""><i class=""fa fa-download btnDownloa");
            WriteLiteral(@"d""></i></a>'
                                        + '</div>'
                                }
                            }
                        ],
                        ""order"": [[1, ""desc""]]
                    });

                    //$.fn.dataTable.ext.errMode = 'throw';

                    //--------------------------Function untuk melempar parameter search ---------------------//
                    //Untuk melempar parameter search
                    //oTable = $('#Table').DataTable();
                    $('#BtnSearch').click(function () {
                        Table.columns(2).search($('#txtNamaSearchParam').val().trim());
                        Table.columns(3).search($('#txtKeteranganSearchParam').val().trim());


                        //hit search ke server
                        Table.draw();
                    });


                    //---------------------Function untuk reset data pencarian----------------//
                    $('#BtnClearSearch').");
            WriteLiteral(@"click(function () {
                        $('#txtNamaSearchParam').val("""");
                        $('#txtKeteranganSearchParam').val("""");

                        Table.columns(2).search($('#txtNamaSearchParam').val().trim());
                        Table.columns(3).search($('#txtKeteranganSearchParam').val().trim());
                        //hit search ke server
                        Table.draw();
                    });

                    TableFasilitasKredit.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }

    function LoadDataChecking(data) {
");
            EndContext();
            BeginContext(16240, 5937, true);
            WriteLiteral(@"        debugger;
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableChecking = $('#TableCheckingDocument').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
 ");
            WriteLiteral(@"                       ajax: {
                            ""url"": '../Monitoring/LoadDataChecking',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": data },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanju");
            WriteLiteral(@"tnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            {
                                responsivePriority: 2, ""data"": ""ChecklistDukcapil"", ""name"": ""ChecklistDukcapil"",
                                ""render"": function (data, type, full, meta) {
                                    if (data == true) {
                                        return '<center>Ya</center>'
                                    }
                                    else {
                                        return '<center>Tidak</center>'
                                    }
      ");
            WriteLiteral(@"                          }
                            },
                            {
                                responsivePriority: 3, ""data"": ""ChecklistNPWP"", ""name"": ""ChecklistNPWP"",
                                ""render"": function (data, type, full, meta) {
                                    if (data == true) {
                                        return '<center>Ya</center>'
                                    }
                                    else {
                                        return '<center>Tidak</center>'
                                    }
                                }
                            },
                            {
                                responsivePriority: 4, ""data"": ""ChecklistSLIK"", ""name"": ""ChecklistSLIK"",
                                ""render"": function (data, type, full, meta) {
                                    if (data == true) {
                                        return '<center>Ya</center>'
               ");
            WriteLiteral(@"                     }
                                    else {
                                        return '<center>Tidak</center>'
                                    }
                                }
                            },
                            {
                                responsivePriority: 5, ""data"": ""ChecklistDHN"", ""name"": ""ChecklistDHN"",
                                ""render"": function (data, type, full, meta) {
                                    if (data == true) {
                                        return '<center>Ya</center>'
                                    }
                                    else {
                                        return '<center>Tidak</center>'
                                    }
                                }
                            },
                            {
                                responsivePriority: 6, ""data"": ""ChecklistOSS"", ""name"": ""ChecklistOSS"",
                                ""render");
            WriteLiteral(@""": function (data, type, full, meta) {
                                    if (data == true) {
                                        return '<center>Ya</center>'
                                    }
                                    else {
                                        return '<center>Tidak</center>'
                                    }
                                }
                            }
                        ],
                        ""order"": [[1, ""desc""]]
                    });



                    TableChecking.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function LoadDataDisclaimer(data) {
");
            EndContext();
            BeginContext(22287, 3809, true);
            WriteLiteral(@"        debugger;
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableDisclaimer = $('#TableDisclaimer').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
     ");
            WriteLiteral(@"                   ajax: {
                            ""url"": '../Monitoring/LoadDataDisclaimer',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": data },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutn");
            WriteLiteral(@"ya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            {
                                responsivePriority: 2,
                                ""data"": ""Id"", ""name"": ""Id"", ""orderable"": false, ""visible"": true, ""render"": function (data, type, full, meta) {
                                    return '<div class=""btn-group""><a href=""javascript:void(0)"" class=""btn btn-small btn-facebook"" id=""button-edit"" onclick=""ViewDisclaimer(' + full.ProspekId + ')"" style=""margin-right:5px;"" data-toggle=""tooltip"" title=""View""><i class=""fa fa-eye btnView""></i></a>'
                         ");
            WriteLiteral(@"               + '</div>'
                                }
                            },
                            { responsivePriority: 3, ""data"": ""Deskripsi"", ""name"": ""Deskripsi"" },
                            {
                                responsivePriority: 4, ""data"": ""Soal"", ""name"": ""Soal""
                            }
                        ],
                        ""order"": [[1, ""desc""]]
                    });



                    TableDisclaimer.columns.adjust().responsive.recalc();
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }

    function LoadDataRiwayatKomentar(data) {
");
            EndContext();
            BeginContext(26216, 3274, true);
            WriteLiteral(@"        debugger;
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableRiwayatKomentar = $('#TableRiwayatKomentar').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: da");
            WriteLiteral(@"ta,
                        ajax: {
                            ""url"": '../Monitoring/LoadDataRiwayatKomentar',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": data },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Ha");
            WriteLiteral(@"laman Selanjutnya"",
                            },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Number"", ""name"": ""Number"" },
                            { responsivePriority: 2, ""data"": ""ActionName"", ""name"": ""ActionName"" },
                            { responsivePriority: 3, ""data"": ""Komentar"", ""name"": ""Komentar"" },
                            {
                                responsivePriority: 4, ""data"": ""Role"", ""name"": ""Role""
                            }
                        ],
                        ""order"": [[1, ""desc""]]
                    });



                    TableRiwayatKomentar.columns.adjust().responsive.recalc();
       ");
            WriteLiteral("         }\r\n                else {\r\n                    window.location.href = \"../Login/Login?a=true\";\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function LoadHistory_Tracking(id) {\r\n");
            EndContext();
            BeginContext(29596, 17262, true);
            WriteLiteral(@"        debugger;
        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    TableTracking = $('#TableTracking').DataTable({
                        fixedHeader: {
                            header: true
                        },
                        pageLength: 10,
                        destroy: true,
                        orderCellsTop: true,
                        responsive: true,
                        processing: true, // untuk menampilkan bar prosessing
                        serverSide: true, // untuk proses server side datatable harus diset true
                        orderMulti: false, // untuk disable multi order column
                        retrieve: true,
                        //autoWidth: true,
                        dom: '<""top""i>rt<""bottom""lp><""clear"">', // untuk menghilangkan search global
                        //data: data,
         ");
            WriteLiteral(@"               ajax: {
                            ""url"": '../Monitoring/Tracking',
                            ""type"": ""POST"",
                            ""datatype"": ""json"",
                            ""data"": { ""Id"": id },
                            error: function (jqXHR, textStatus, errorThrown) {
                                window.location.href = ""../Error/HttpStatusErrorLayout?statusCode=500""
                            }
                        },
                        language: {
                            processing: '<i class=""fa fa-spinner fa-spin fa-3x fa-fw""></i><span class=""sr-only"">Loading...</span> ',
                            info: ""Menampilkan _START_ Sampai _END_ Dari _TOTAL_ Data"",
                            paginate: {
                                first: ""Halaman Awal"",
                                last: ""Halaman Akhir"",
                                previous: ""Halaman Sebelumnya"",
                                next: ""Halaman Selanjutnya"",
          ");
            WriteLiteral(@"                  },
                            lengthMenu: ""Menampilkan _MENU_ Data"",
                            emptyTable: ""Data tidak ditemukan"",
                            infoEmpty: ""Menampilkan 0 Sampai 0 Dari 0 Data"",
                            zeroRecords: ""Data tidak ditemukan""
                        },
                        columns: [
                            { responsivePriority: 1, ""data"": ""Status"", ""name"": ""Status"" },
                            { responsivePriority: 2, ""data"": ""StartStepTime"", ""name"": ""StartStepTime"" },
                            { responsivePriority: 3, ""data"": ""EndStepTime"", ""name"": ""EndStepTime"" },
                            {
                                responsivePriority: 4, ""data"": ""NamaRM"", ""name"": ""NamaRM""
                            }
                        ],
                        ""order"": [[1, ""desc""]]
                    });



                    TableTracking.columns.adjust().responsive.recalc();
                }
          ");
            WriteLiteral(@"      else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });
    }



    //--***************************************START EDIT ******************************************//
    function Edit(Id) {
        ShowModal('bd-example-modal-lg');

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    //ShowModal('bd-example-modal-lg');

                    State = ""edit"";
                    SearchData = { ""Id"": Id }
                    UrlPartialView = '../Monitoring/EditFasilitasKredit';
                    LoadPartialViewData(UrlPartialView, function (data) {
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
");
            WriteLiteral(@"                        });

                        InputNominalUang(""MaksimumKredit"");

                        /*********************************************************************************************************************************************************/
                        ValidationForm("""","""");
                    }, SearchData);
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }
    //--***************************************END EDIT ******************************************//

    //--***************************************START VIEW ******************************************//
    function ViewDisclaimer(Id) {
        ShowModal('bd-example-modal-lg');

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
                if (hasil == true) {
                    //ShowModal('bd-example-");
            WriteLiteral(@"modal-lg');

                    State = ""edit"";
                    SearchData = { ""Id"": Id }
                    UrlPartialView = '../Monitoring/ViewDisclaimer';
                    LoadPartialViewData(UrlPartialView, function (data) {
                        var modalbody = $('#LoadContent');
                        modalbody.html(data);
                        $('#ModalForm').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        LoadDataTableFile(Id);
                    }, SearchData);
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }

    function View(LeadsId, KategoriLeadsId, ProspekId, Id, NoPengajuan) {
        ShowModal('bd-example-modal-lg');

        $.ajax({
            type: 'GET',
            url: '../Login/CekSession',
            success: function (hasil) {
");
            WriteLiteral(@"                if (hasil == true) {
                    //ShowModal('bd-example-modal-lg');

                    State = ""view"";
                    SearchData = { ""LeadsId"": LeadsId, ""KategoriLeadsId"": KategoriLeadsId }
                    UrlPartialView = '../Monitoring/View';
                    LoadPartialViewData(UrlPartialView, function (data) {

                        $('#DivContentBody').hide();
                        document.getElementById(""DivFormBody"").innerHTML = data;

                        $(""#FormData :input"").prop(""disabled"", true);

                        $('#catatan').summernote({
                            height: 400,   //set editable area's height
                            codemirror: { // codemirror options
                                theme: 'monokai'
                            },
                            toolbar: [
                                ['style', ['style']],
                                ['font', ['bold', 'italic', 'underline', 'striketh");
            WriteLiteral(@"rough', 'superscript', 'subscript', 'clear']],
                                ['fontname', ['fontname']],
                                ['fontsize', ['fontsize']],
                                ['color', ['color']],
                                ['para', ['ol', 'ul', 'paragraph', 'height']],
                                ['table', ['table']],
                                ['insert', ['link']],
                                ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']]
                            ]
                        });
                        var text =  /*************************************/

                            $(""#catatan"").summernote(""code"", text);
                        LoadDataTableFasilitasKredit(NoPengajuan);
                        LoadDataChecking(ProspekId);
                        LoadDataDisclaimer(ProspekId);
                        LoadDataRiwayatKomentar(Id);
                        LoadHistory_Tracking(ProspekId);
                 ");
            WriteLiteral(@"       ValidationForm(Id, ProspekId);
                    }, SearchData);
                }
                else {
                    window.location.href = ""../Login/Login?a=true"";
                }
            }
        });

    }
    //--***************************************END VIEW ******************************************//


    //Untuk Validasi Form data Pinjaman
    function ValidationForm(Id, ProspekId) {
        //Untuk validasi form
        var $validator = $(""#FormData"").validate({
            ignore: [],
            rules: {
                MaksimumKredit: {
                    required: true
                },
                catatan: {
                    required: true
                },
                OrderBy: {
                    required: true
                },
                Visible: {
                    required: true
                },
            },
            messages: {

            },

            highlight: function (element) {
        ");
            WriteLiteral(@"        $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.is('textarea')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                } else if (element.is(':radio')) {
                    element.next().css('border', '1px solid red');
                    error.insertAfter(element.parent());
                }
                else if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            }");
            WriteLiteral(@"
        });
        $.validator.messages.required = ""Harap isi field ini terlebih dahulu!"";

        //check apakah form sudah valid atau belum

        $('#BtnSubmitFasilitas').click(function () {
            var url = '';
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                //Cek session terlebih dahulu
                $.ajax({
                    type: 'GET',
                    url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
                            $.ajax({
                                url: '../Monitoring/SubmitEdit',
                                type: 'POST',
                                data: $('#FormData').serialize() + ""&idprospek="" + ProspekId,
                                success: function (d) {
                            ");
            WriteLiteral(@"        //Tampilkan alert status
                                    if (d == """") {
                                        /**************/

                                        $('#ModalForm').modal('hide');
                                        NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                        Table.draw();
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                            return false;
                        }
                        else {
                            window.location.href = ""../Login/Login?a=true"";
                        }
                    }
                });
            }
        });

        $('#BtnApprove').click(function () {
            debugger;
            var catatan = $('#catatan').summernote('code');
            var id = $(");
            WriteLiteral(@"'#Id').val();
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                //Cek session terlebih dahulu
                $.ajax({
                    type: 'GET',
                    url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
                            $.ajax({
                                url: '../Monitoring/Approve?catatan=' + catatan + '&id=' + Id,
                                type: 'POST',
                                data: $('#FormData').serialize(),
                                success: function (d) {
                                    //Tampilkan alert status
                                    if (d == """") {
                                         BackDraft();

                                        NotifikasiSukses(""Sukses"", ""Data");
            WriteLiteral(@" berhasil disimpan!"");
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                            return false;
                        }
                        else {
                            window.location.href = ""../Login/Login?a=true"";
                        }
                    }
                });
            }

        });

        $('#BtnReject').click(function () {
            debugger;
            var catatan = $('#catatan').summernote('code');
            var id = $('#Id').val();
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                //Cek session terlebih dahulu
                $.ajax({
                    type: 'GET',
            ");
            WriteLiteral(@"        url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
                            $.ajax({
                                url: '../Monitoring/Reject?catatan=' + catatan + '&id=' + Id,
                                type: 'POST',
                                data: $('#FormData').serialize(),
                                success: function (d) {
                                    //Tampilkan alert status
                                    if (d == """") {
                                        BackDraft();

                                        NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                            return false;
                        }
                        else {");
            WriteLiteral(@"
                            window.location.href = ""../Login/Login?a=true"";
                        }
                    }
                });
            }

        });

        $('#BtnPending').click(function () {
            debugger;
            var catatan = $('#catatan').summernote('code');
            var id = $('#Id').val();
            var $valid = $(""#FormData"").valid();
            if (!$valid) {
                //alert(""False"");
                $validator.focusInvalid();
                return false;
            } else {
                //Cek session terlebih dahulu
                $.ajax({
                    type: 'GET',
                    url: '../Login/CekSession',
                    success: function (hasil) {
                        if (hasil == true) {
                            $.ajax({
                                url: '../Monitoring/Pending?catatan=' + catatan + '&id=' + Id,
                                type: 'POST',
                                ");
            WriteLiteral(@"data: $('#FormData').serialize(),
                                success: function (d) {
                                    //Tampilkan alert status
                                    if (d == """") {
                                        BackDraft();

                                        NotifikasiSukses(""Sukses"", ""Data berhasil disimpan!"");
                                    } else {
                                        NotifikasiError(""Error"", d)
                                    }
                                }
                            });
                            return false;
                        }
                        else {
                            window.location.href = ""../Login/Login?a=true"";
                        }
                    }
                });
            }

        });


    }</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
